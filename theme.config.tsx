import React from 'react'
import { DocsThemeConfig, useConfig } from 'nextra-theme-docs'
import { useRouter } from 'next/router'
const logo = (
  <span>
    <svg height="32" viewBox="0 0 232 90" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink">
      <defs>
        <linearGradient x1="0%" y1="0%" x2="100%" y2="0%" id="linearGradient-f409qwt-o5-1">
          <stop stopColor="#050922" offset="0%"></stop>
          <stop stopColor="#6EE6C7" offset="100%"></stop>
        </linearGradient>
        <linearGradient x1="0%" y1="0%" x2="100%" y2="0%" id="linearGradient-f409qwt-o5-2">
          <stop stopColor="#050922" offset="0%"></stop>
          <stop stopColor="#6EE6C7" offset="100%"></stop>
        </linearGradient>
        <linearGradient x1="0%" y1="0%" x2="100%" y2="0%" id="linearGradient-f409qwt-o5-3">
          <stop stopColor="#050922" offset="0%"></stop>
          <stop stopColor="#6EE6C7" offset="100%"></stop>
        </linearGradient>
      </defs>
      <g id="Mog-Icons" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
        <g id="画板备份-5" transform="translate(-205.000000, -262.000000)" fillRule="nonzero">
          <g id="default-monochrome" transform="translate(205.000000, 262.000000)">
            <g id="9b53a386-521a-4bce-b172-6530fb4038b7" transform="translate(119.365400, 14.191733)" fill="#0F2020">
              <path d="M42.5934078,44.6153859 L46.9450563,44.6153859 L37.2307703,-1.95204054e-15 L23.5164842,35.8241768 L9.80219808,-1.95204054e-15 L-2.44005067e-15,44.6153859 L4.43956056,44.6153859 L10.9010992,14.8131872 L23.5164842,47.0769244 L36.0439571,14.8131872 L42.5934078,44.6153859 Z M74.3296724,30.9450558 C74.3296724,33.6263746 73.3626394,35.9120889 71.4285734,37.8461549 C69.5384635,39.7802209 67.2087931,40.7472539 64.4835183,40.7472539 C61.8021995,40.7472539 59.4725291,39.7802209 57.5384631,37.8461549 C55.6043972,35.9120889 54.6373642,33.6263746 54.6373642,30.9450558 C54.6373642,28.2637371 55.6043972,25.9340667 57.5384631,24.0000007 C59.4725291,22.0659347 61.8021995,21.0989017 64.4835183,21.0989017 C67.2087931,21.0989017 69.5384635,22.0659347 71.4285734,24.0000007 C73.3626394,25.9340667 74.3296724,28.2637371 74.3296724,30.9450558 Z M78.6373648,30.9450558 C78.6373648,27.0769238 77.2747274,23.7362644 74.5054966,20.9670336 C71.7362657,18.1978027 68.3956063,16.7912093 64.4835183,16.7912093 C60.6153863,16.7912093 57.2747269,18.1978027 54.505496,20.9670336 C51.7362652,23.7362644 50.3296717,27.0769238 50.3296717,30.9450558 C50.3296717,34.8571438 51.7362652,38.1978033 54.505496,40.9230781 C57.2747269,43.6923089 60.6153863,45.0549463 64.4835183,45.0549463 C68.3516503,45.0549463 71.6923097,43.6923089 74.5054966,40.9230781 C77.2747274,38.1978033 78.6373648,34.8571438 78.6373648,30.9450558 Z M107.956047,31.0769239 C107.956047,33.7142867 107.03297,36.000001 105.186816,37.978023 C103.384618,39.9560451 101.098904,40.9230781 98.4175852,40.9230781 C95.7802225,40.9230781 93.4945081,39.9560451 91.6483542,37.978023 C89.8022003,36.0439571 88.8791234,33.7582427 88.8791234,31.0769239 C88.8791234,28.3956052 89.8022003,26.1098908 91.6483542,24.1758249 C93.4945081,22.1978028 95.7802225,21.2307698 98.4175852,21.2307698 C101.098904,21.2307698 103.384618,22.1978028 105.186816,24.1758249 C107.03297,26.1538469 107.956047,28.4395612 107.956047,31.0769239 Z M88.7472552,48.3076937 L84.3516507,48.3076937 C84.8351672,51.1648366 86.1538486,53.7142872 88.3076948,55.8681334 C91.0769256,58.6373643 94.373629,60.0000017 98.1978049,60.0000017 C102.065937,60.0000017 105.36264,58.6373643 108.131871,55.8681334 C110.857146,53.1428586 112.263739,49.8461552 112.263739,45.9780233 L112.263739,17.538462 L107.956047,17.538462 L107.956047,22.0659347 C107.736267,21.8021984 107.516487,21.5384621 107.25275,21.2307698 C104.527475,18.3736269 101.406596,16.9230774 97.8022005,16.9230774 C94.0219806,16.9230774 90.8571454,18.3736269 88.2637387,21.2307698 C85.8022002,24.0000007 84.5714309,27.2967041 84.5714309,31.0769239 C84.5714309,34.8571438 85.8022002,38.1538472 88.2637387,40.9230774 C90.8571454,43.780221 94.0219806,45.2307705 97.8022005,45.2307705 C101.538464,45.2307705 104.659344,43.780221 107.25275,40.9230774 C107.516487,40.6153858 107.736267,40.3516495 107.956047,40.0879132 L107.956047,45.9780233 C107.956047,48.615386 106.989014,50.9450564 105.054948,52.8351663 C103.164838,54.7252763 100.879124,55.6923092 98.1978049,55.6923092 C95.5604422,55.6923092 93.2747279,54.7252763 91.3406619,52.8351663 C90.0219805,51.516485 89.1428596,49.9780234 88.7472552,48.3076937 Z" id="形状"></path>
            </g>
            <g id="6cad102b-508d-472b-89db-b511a74aae75">
              <path d="M25.7323783,51.7747344 L28.6647005,68.2657942 L20.8585185,72.9545074 L20.8585185,90.0000062 L14.42042,90.0000062 L14.42042,66.3552812 L25.7323783,51.7747344 Z M83.4650986,61.8447092 L79.6600853,71.1380689 L92.4552182,90.0000062 L99.0114102,90.0000062 L83.4650986,61.8447092 Z" id="形状" fill="url(#linearGradient-f409qwt-o5-1)"></path>
              <path d="M100.080257,38.6803646 L22.9221528,38.6803646 C15.4252157,38.0648772 9.53054754,31.7909086 9.53054754,24.1348455 C9.53054754,16.0764639 16.0587174,9.54228925 24.1130959,9.53228132 L24.1341126,9.53328212 L24.1531276,9.53228132 C25.8841141,9.57233684 27.5007061,8.67061719 28.3760875,7.17675437 C29.2514689,5.68289154 29.2479701,3.83182276 28.3669477,2.34127982 C27.4859253,0.850736886 25.8659361,-0.0448651056 24.1351133,0.00173378562 L23.967981,0.00273457818 C10.7154859,0.0918051159 -2.55553677e-15,10.8613338 -2.55553677e-15,24.132844 C-2.55553677e-15,37.4593977 10.8055573,48.2639541 24.1331118,48.2639541 L25.8724892,48.2639541 L41.7981012,90 L48.3112592,90 L42.9950491,72.9545074 L52.7948099,61.84571 L65.9932621,61.84571 L65.9932621,90 L72.4383662,90 L72.4383662,72.9545074 L88.0287127,53.6251999 C90.2706928,54.9193694 93.03276,54.9193167 95.2746907,53.6250615 C97.5166214,52.3308063 98.8978993,49.9389271 98.8983207,47.3502305 C98.9019504,45.5488957 98.2315058,43.8113803 97.0188322,42.4793732 L100.080257,38.6803646 Z" id="路径" fill="url(#linearGradient-f409qwt-o5-2)"></path>
              <polyline id="路径" fill="url(#linearGradient-f409qwt-o5-3)" points="25.8724892 48.2639541 41.7981012 90.0000062 48.3112592 90.0000062 42.9950491 72.9545074"></polyline>
            </g>
          </g>
        </g>
      </g>
    </svg>
    <style jsx>{`
      span {
        padding: 0.5rem 0.5rem 0.5rem 0;
        mask-image: linear-gradient(
          60deg,
          black 25%,
          rgba(0, 0, 0, 0.2) 50%,
          black 75%
        );
        mask-size: 400%;
        mask-position: 0%;
      }
      span:hover {
        mask-position: 100%;
        transition: mask-position 1s ease, -webkit-mask-position 1s ease;
      }
    `}</style>
  </span>
)
const config: DocsThemeConfig = {
  logo,
  head: function useHead() {
    const { title } = useConfig()
    const { route } = useRouter()
    // const socialCard =
    //   route === '/' || !title
    //     ? 'https://mog.js.org/og.png'
    //     : `https://mog.js.org/api/og?title=${title}`
    const socialCard = 'https://mog.js.org/og.png'

    return (
      <>
        <meta name="msapplication-TileColor" content="#fff" />
        <meta name="theme-color" content="#fff" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta httpEquiv="Content-Language" content="en" />
        <meta
          name="description"
          content="A flexible, modular CMS Blog System."
        />
        <meta
          name="og:description"
          content="A flexible, modular CMS Blog System."
        />
        <meta name="twitter:card" content="summary_large_image" />
        <meta name="twitter:image" content={socialCard} />
        <meta name="twitter:site:domain" content="mog.js.org" />
        <meta name="twitter:url" content="https://mog.js.org" />
        <meta
          name="og:title"
          content={title ? title + ' – Mog' : 'Mog'}
        />
        <meta name="og:image" content={socialCard} />
        <meta name="apple-mobile-web-app-title" content="Mog" />
        <link rel="icon" href="/favicon.svg" type="image/svg+xml" />
        <link rel="icon" href="/favicon.png" type="image/png" />
      </>
    )
  },
  project: {
    link: 'https://github.com/mogland/core',
  },
  docsRepositoryBase: 'https://github.com/mogland/mog-docs',
  footer: {
    text: <span>
      AGPLv3 {new Date().getFullYear()} © <a href="https://github.com/mogland/core" target="_blank">Mog</a>.
    </span>
  },
  useNextSeoProps() {
    const { asPath } = useRouter()
    if (asPath !== '/') {
      return {
        titleTemplate: '%s – Mog'
      }
    }
  },
  editLink: {
    text: 'Edit this page on GitHub →'
  },
  // banner: {
  //   key: '2.0-refactoring',
  //   text: <a href="/blog/mog-v2-refactor" target="_blank">
  //     ⏰ Mog 2.0 is refactoring. Read more →
  //   </a>,
  // },
}

export default config
