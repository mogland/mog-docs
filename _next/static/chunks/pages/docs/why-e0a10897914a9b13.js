(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6437],{3122:function(n,e,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/why",function(){return s(4029)}])},4029:function(n,e,s){"use strict";s.r(e),s.d(e,{__toc:function(){return o}});var r=s(1527),i=s(5426),c=s(1534);let o=[{depth:2,value:"Mog 是怎么样的？",id:"mog-是怎么样的"},{depth:2,value:"历史",id:"历史"}];function d(n){let e=Object.assign({h1:"h1",h2:"h2",p:"p",strong:"strong",code:"code",a:"a",ul:"ul",li:"li"},(0,c.a)(),n.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h1,{children:"为什么选择 Mog？"}),"\n",(0,r.jsx)(e.h2,{id:"mog-是怎么样的",children:"Mog 是怎么样的？"}),"\n",(0,r.jsxs)(e.p,{children:["Mog 默认推荐你使用的是",(0,r.jsx)(e.strong,{children:"前后端分离架构"}),"。这样可以给开发的人提供便捷，也避免了和其他领域的人做不太必要的争吵。",(0,r.jsx)(e.strong,{children:"专业的事情交给专业的人去做"}),"。"]}),"\n",(0,r.jsxs)(e.p,{children:["它具有高度的开发自由度，您可以通过",(0,r.jsx)(e.strong,{children:"接口"}),"来开发自己的前/中后台，也可以通过",(0,r.jsx)(e.strong,{children:"插件"}),"来开发自己的功能。"]}),"\n",(0,r.jsxs)(e.p,{children:["除此之外，多亏视图引擎，Mog 在 ",(0,r.jsx)(e.code,{children:"v0.x"})," 引入了 ",(0,r.jsx)(e.strong,{children:"「模板引擎」"})," 功能，如优秀的 Hexo 等，使用 ",(0,r.jsx)(e.strong,{children:"ejs"})," 即可简单开发，局限性还是有的，毕竟是在后端处理，在变量提供方面我会尽量按照 Hexo 规范，但是并不能保证完全相同。"]}),"\n",(0,r.jsxs)(e.p,{children:["在 ",(0,r.jsx)(e.code,{children:"v1"})," 版本中，使用了 Fastify 作为底层，这并不妨碍使用视图引擎，Fastify 可以自动解析视图引擎，而且它的视图引擎支持多种类型的视图，比如 ejs、pug、handlebars 等。但是相关的变量还正在讨论中，",(0,r.jsx)(e.strong,{children:"暂时未上线。"})]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.code,{children:"v2"})," 版本中，我们颠覆从前的架构，选择了微服务架构，拓展了原有应用的功能。"]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Mog 旨在探索一种新的博客系统架构，它的目标是提供一个高度自由度的博客系统，探索项目的最佳实践。"})}),"\n",(0,r.jsxs)(e.p,{children:["继续阅读 ",(0,r.jsx)(e.a,{href:"/docs",children:"快速起步"})]}),"\n",(0,r.jsx)(e.h2,{id:"历史",children:"历史"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"v0.x"}),"：MySQL + Express, 此为第一个版本，但是由于一些原因，我并没有继续开发下去。"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"v1.x"}),"：MongoDB + Fastify, 此为第二个版本，但是由于其中的大部分代码以及结构与 Mix Space 极度相似，我打算走一条新的路线。"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"v2.x"}),"：MongoDB + Fastify + ",(0,r.jsx)(e.strong,{children:"Microservices"}),", 此为第三个版本，我们将会在这个版本中，探索一种新的博客系统架构。"]}),"\n"]})]})}e.default=(0,i.j)({MDXContent:function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,c.a)(),n.components);return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)},pageOpts:{filePath:"pages/docs/why.mdx",route:"/docs/why",frontMatter:{title:"为什么选择 Mog？"},title:"为什么选择 Mog？",headings:o},pageNextRoute:"/docs/why"})}},function(n){n.O(0,[5426,9774,2888,179],function(){return n(n.s=3122)}),_N_E=n.O()}]);