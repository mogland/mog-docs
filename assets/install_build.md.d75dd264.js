import{_ as s,o as n,c as a,a as l}from"./app.3b5c49f7.js";const g=JSON.parse('{"title":"自主构建 | 进阶安装","description":"","frontmatter":{"title":"自主构建 | 进阶安装"},"headers":[{"level":2,"title":"直接构建服务","slug":"直接构建服务","link":"#直接构建服务","children":[]},{"level":2,"title":"拓展：使用 @vercel/ncc 重新构建","slug":"拓展-使用-vercel-ncc-重新构建","link":"#拓展-使用-vercel-ncc-重新构建","children":[]}],"relativePath":"install/build.md","lastUpdated":1672833471000}'),p={name:"install/build.md"},o=l(`<h1 id="自主构建" tabindex="-1">自主构建 <a class="header-anchor" href="#自主构建" aria-hidden="true">#</a></h1><div class="tip custom-block"><p class="custom-block-title">你什么时候需要自主构建？</p><p>如果你想要自定义构建过程，或者你想要在不同的平台上运行，那么你需要自主构建。我们在「快速起步」章节提供的是 <strong>Linux + macOS x86</strong> 平台的构建包。</p></div><h2 id="直接构建服务" tabindex="-1">直接构建服务 <a class="header-anchor" href="#直接构建服务" aria-hidden="true">#</a></h2><p>克隆 git 仓库，其中 <code>core</code> 为 Mog 核心 必须安装</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#FFA657;">git</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">clone</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">https://github.com/mogland/core.git</span></span>
<span class="line"></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#953800;">git</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">clone</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">https://github.com/mogland/core.git</span></span>
<span class="line"></span></code></pre></div><p>使用 pnpm 安装项目依赖</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#FFA657;">pnpm</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">install</span></span>
<span class="line"></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#953800;">pnpm</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">install</span></span>
<span class="line"></span></code></pre></div><p>使用 NestJS CLI 命令构建你需要的服务</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#FFA657;">pnpm</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">build:</span><span style="color:#FF7B72;">&lt;</span><span style="color:#A5D6FF;">service-nam</span><span style="color:#C9D1D9;">e</span><span style="color:#FF7B72;">&gt;</span></span>
<span class="line"><span style="color:#8B949E;"># 比如说</span></span>
<span class="line"><span style="color:#FFA657;">pnpm</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">build:core</span></span>
<span class="line"></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#953800;">pnpm</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">build:</span><span style="color:#CF222E;">&lt;</span><span style="color:#0A3069;">service-nam</span><span style="color:#24292F;">e</span><span style="color:#CF222E;">&gt;</span></span>
<span class="line"><span style="color:#6E7781;"># 比如说</span></span>
<span class="line"><span style="color:#953800;">pnpm</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">build:core</span></span>
<span class="line"></span></code></pre></div><p>目前支持的 <code>service-name</code> 有：</p><ul><li><code>core</code> - 网关层 <strong>（必须构建）</strong></li><li><code>user-service</code> - 用户服务模块 <strong>（必须构建）</strong></li><li><code>page-service</code> - 文章页面分类服务模块 <strong>（必须构建）</strong></li></ul><p>使用 <code>node</code> 命令启动你已构建完成的服务</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79C0FF;">cd</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">dist/</span><span style="color:#FF7B72;">&lt;</span><span style="color:#A5D6FF;">service-nam</span><span style="color:#C9D1D9;">e</span><span style="color:#FF7B72;">&gt;</span></span>
<span class="line"><span style="color:#FFA657;">node</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">main.js</span></span>
<span class="line"><span style="color:#8B949E;"># 比如说</span></span>
<span class="line"><span style="color:#79C0FF;">cd</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">dist/core</span></span>
<span class="line"><span style="color:#FFA657;">node</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">main.js</span></span>
<span class="line"></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#0550AE;">cd</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">dist/</span><span style="color:#CF222E;">&lt;</span><span style="color:#0A3069;">service-nam</span><span style="color:#24292F;">e</span><span style="color:#CF222E;">&gt;</span></span>
<span class="line"><span style="color:#953800;">node</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">main.js</span></span>
<span class="line"><span style="color:#6E7781;"># 比如说</span></span>
<span class="line"><span style="color:#0550AE;">cd</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">dist/core</span></span>
<span class="line"><span style="color:#953800;">node</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">main.js</span></span>
<span class="line"></span></code></pre></div><h2 id="拓展-使用-vercel-ncc-重新构建" tabindex="-1">拓展：使用 @vercel/ncc 重新构建 <a class="header-anchor" href="#拓展-使用-vercel-ncc-重新构建" aria-hidden="true">#</a></h2><p><code>@vercel/ncc</code> 是一个可以将 Node.js 项目打包成一个单文件的工具，让你可以在不安装项目依赖（<code>node_modules</code>）的情况下运行项目。</p><p>core 中已经写好了相关构建命令，你可以直接使用，但前提是你需要先构建了服务。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#FFA657;">pnpm</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">bundle:</span><span style="color:#FF7B72;">&lt;</span><span style="color:#A5D6FF;">service-nam</span><span style="color:#C9D1D9;">e</span><span style="color:#FF7B72;">&gt;</span></span>
<span class="line"><span style="color:#8B949E;"># 比如说</span></span>
<span class="line"><span style="color:#FFA657;">pnpm</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">bundle:core</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;"># 你也可以使用</span></span>
<span class="line"><span style="color:#FFA657;">pnpm</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">bundle</span><span style="color:#C9D1D9;"> </span><span style="color:#8B949E;"># 构建所有服务</span></span>
<span class="line"></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#953800;">pnpm</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">bundle:</span><span style="color:#CF222E;">&lt;</span><span style="color:#0A3069;">service-nam</span><span style="color:#24292F;">e</span><span style="color:#CF222E;">&gt;</span></span>
<span class="line"><span style="color:#6E7781;"># 比如说</span></span>
<span class="line"><span style="color:#953800;">pnpm</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">bundle:core</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E7781;"># 你也可以使用</span></span>
<span class="line"><span style="color:#953800;">pnpm</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">bundle</span><span style="color:#24292F;"> </span><span style="color:#6E7781;"># 构建所有服务</span></span>
<span class="line"></span></code></pre></div><p>构建完成后，你可以在 <code>out/&lt;service-name&gt;</code> 目录下找到打包后的文件夹。请注意，请勿修改打包后的文件夹内的任何文件，否则可能会导致服务无法正常运行。</p><p>接下来使用 <code>node</code> 命令启动你已构建完成的服务</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79C0FF;">cd</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">out/</span><span style="color:#FF7B72;">&lt;</span><span style="color:#A5D6FF;">service-nam</span><span style="color:#C9D1D9;">e</span><span style="color:#FF7B72;">&gt;</span></span>
<span class="line"><span style="color:#FFA657;">node</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">main.js</span></span>
<span class="line"><span style="color:#8B949E;"># 比如说</span></span>
<span class="line"><span style="color:#79C0FF;">cd</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">out/core</span></span>
<span class="line"><span style="color:#FFA657;">node</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">main.js</span></span>
<span class="line"></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#0550AE;">cd</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">out/</span><span style="color:#CF222E;">&lt;</span><span style="color:#0A3069;">service-nam</span><span style="color:#24292F;">e</span><span style="color:#CF222E;">&gt;</span></span>
<span class="line"><span style="color:#953800;">node</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">main.js</span></span>
<span class="line"><span style="color:#6E7781;"># 比如说</span></span>
<span class="line"><span style="color:#0550AE;">cd</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">out/core</span></span>
<span class="line"><span style="color:#953800;">node</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">main.js</span></span>
<span class="line"></span></code></pre></div><p>关于组件启动时的自定义配置，请前往<a href="./../config/">「配置索引」</a>章节</p><blockquote><p>关于如何持久化运行，请自行使用搜索引擎探索。这里给两个相关的关键词：<code>pm2</code>, <code>screen</code>, <code>docker</code>, <code>docker compose</code></p></blockquote>`,22),e=[o];function c(t,r,i,d,y,F){return n(),a("div",null,e)}const u=s(p,[["render",c]]);export{g as __pageData,u as default};
