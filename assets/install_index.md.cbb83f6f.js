import{_ as s,o as a,c as n,a as l}from"./app.3b5c49f7.js";const D=JSON.parse('{"title":"自定义配置 Mog Core | 进阶安装","description":"","frontmatter":{"title":"自定义配置 Mog Core | 进阶安装"},"headers":[{"level":2,"title":"启动命令的改变","slug":"启动命令的改变","link":"#启动命令的改变","children":[]},{"level":2,"title":"配置 Core","slug":"配置-core","link":"#配置-core","children":[]},{"level":2,"title":"启动 Core","slug":"启动-core","link":"#启动-core","children":[{"level":3,"title":"⚠️ 警告","slug":"⚠️-警告","link":"#⚠️-警告","children":[]}]},{"level":2,"title":"如何检查配置？","slug":"如何检查配置","link":"#如何检查配置","children":[]}],"relativePath":"install/index.md","lastUpdated":1672927879000}'),p={name:"install/index.md"},o=l(`<h1 id="自定义配置-mog-core" tabindex="-1">自定义配置 Mog Core <a class="header-anchor" href="#自定义配置-mog-core" aria-hidden="true">#</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>此功能与原本规划的具有一定区别，请注意文档的改变。</p></div><p>Mog 的主要优势之一是它可以弹性组装服务。只要你的条件允许，你可以将服务部署至不同的终端中，但一般你只需部署到同一个终端上即可。但是当你需要配置网关连接服务的IP时（也就是当你将服务部署到了不同的终端时）你需要对 Core 进行配置</p><p><strong>所以一般来说，如果你只部署到了同一个终端上，以下的内容你是不需要了解且填写的，配置的内容越多，越容易出问题。</strong></p><h2 id="启动命令的改变" tabindex="-1">启动命令的改变 <a class="header-anchor" href="#启动命令的改变" aria-hidden="true">#</a></h2><p>我们提到「使用 NestJS CLI 命令启动你已构建完成的服务」使用的命令为</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#FFA657;">node</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">&lt;</span><span style="color:#A5D6FF;">server</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">bundle</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">storge</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">pat</span><span style="color:#C9D1D9;">h</span><span style="color:#FF7B72;">&gt;</span></span>
<span class="line"></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#953800;">node</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">&lt;</span><span style="color:#0A3069;">server</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">bundle</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">storge</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">pat</span><span style="color:#24292F;">h</span><span style="color:#CF222E;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>当我们需要在启动 Mog 进行配置的时候，则需要命令之后在后方携带 <code>--&lt;arg_name&gt;=&lt;arg_value&gt;</code> 格式的参数启动</p><h2 id="配置-core" tabindex="-1">配置 Core <a class="header-anchor" href="#配置-core" aria-hidden="true">#</a></h2><p>当你将服务部署到了不同的终端时，你需要对 Mog Core 的网关层进行配置。</p><p>目前支持配置的字段可以查阅 <a href="/config/">配置索引</a></p><p>我们同样支持 YAML 格式的配置文件，你可以在启动的文件夹下创建 <code>core.yml</code> 文件，然后将配置写入其中</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#7EE787;">user_service</span><span style="color:#C9D1D9;">: </span><span style="color:#8B949E;"># 用户服务</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#7EE787;">host</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">http://localhost:3001</span><span style="color:#C9D1D9;"> </span><span style="color:#8B949E;"># 用户服务部署的主机地址，可以为 IP， 也可以为域名</span></span>
<span class="line"><span style="color:#7EE787;">page_service</span><span style="color:#C9D1D9;">: </span><span style="color:#8B949E;"># 文章等模块服务</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#7EE787;">host</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">http://localhost:3002</span><span style="color:#C9D1D9;"> </span><span style="color:#8B949E;"># 文章等模块服务部署的主机地址，可以为 IP， 也可以为域名</span></span>
<span class="line"><span style="color:#7EE787;">core</span><span style="color:#C9D1D9;">: </span><span style="color:#8B949E;"># 网关层</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#7EE787;">port</span><span style="color:#C9D1D9;">: </span><span style="color:#79C0FF;">3000</span><span style="color:#C9D1D9;"> </span><span style="color:#8B949E;"># 网关层公开端口</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#7EE787;">allow_origins</span><span style="color:#C9D1D9;">: [</span><span style="color:#A5D6FF;">example.com</span><span style="color:#C9D1D9;">, </span><span style="color:#A5D6FF;">excccc.com</span><span style="color:#C9D1D9;">] </span><span style="color:#8B949E;"># 网关层允许的跨域来源，这个地方也可以写成 localhost:9528,localhost:2323,localhost:2222 而不需要 Object</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7EE787;">collection_name</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">&#39;mog&#39;</span><span style="color:#C9D1D9;"> </span><span style="color:#8B949E;"># 数据库的集合名</span></span>
<span class="line"><span style="color:#7EE787;">db_host</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">&#39;localhost&#39;</span><span style="color:#C9D1D9;"> </span><span style="color:#8B949E;"># 数据库主机地址</span></span>
<span class="line"><span style="color:#8B949E;">#...more</span></span>
<span class="line"></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#116329;">user_service</span><span style="color:#24292F;">: </span><span style="color:#6E7781;"># 用户服务</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#116329;">host</span><span style="color:#24292F;">: </span><span style="color:#0A3069;">http://localhost:3001</span><span style="color:#24292F;"> </span><span style="color:#6E7781;"># 用户服务部署的主机地址，可以为 IP， 也可以为域名</span></span>
<span class="line"><span style="color:#116329;">page_service</span><span style="color:#24292F;">: </span><span style="color:#6E7781;"># 文章等模块服务</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#116329;">host</span><span style="color:#24292F;">: </span><span style="color:#0A3069;">http://localhost:3002</span><span style="color:#24292F;"> </span><span style="color:#6E7781;"># 文章等模块服务部署的主机地址，可以为 IP， 也可以为域名</span></span>
<span class="line"><span style="color:#116329;">core</span><span style="color:#24292F;">: </span><span style="color:#6E7781;"># 网关层</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#116329;">port</span><span style="color:#24292F;">: </span><span style="color:#0550AE;">3000</span><span style="color:#24292F;"> </span><span style="color:#6E7781;"># 网关层公开端口</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#116329;">allow_origins</span><span style="color:#24292F;">: [</span><span style="color:#0A3069;">example.com</span><span style="color:#24292F;">, </span><span style="color:#0A3069;">excccc.com</span><span style="color:#24292F;">] </span><span style="color:#6E7781;"># 网关层允许的跨域来源，这个地方也可以写成 localhost:9528,localhost:2323,localhost:2222 而不需要 Object</span></span>
<span class="line"></span>
<span class="line"><span style="color:#116329;">collection_name</span><span style="color:#24292F;">: </span><span style="color:#0A3069;">&#39;mog&#39;</span><span style="color:#24292F;"> </span><span style="color:#6E7781;"># 数据库的集合名</span></span>
<span class="line"><span style="color:#116329;">db_host</span><span style="color:#24292F;">: </span><span style="color:#0A3069;">&#39;localhost&#39;</span><span style="color:#24292F;"> </span><span style="color:#6E7781;"># 数据库主机地址</span></span>
<span class="line"><span style="color:#6E7781;">#...more</span></span>
<span class="line"></span></code></pre></div><h2 id="启动-core" tabindex="-1">启动 Core <a class="header-anchor" href="#启动-core" aria-hidden="true">#</a></h2><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-IyIhJ" id="tab-C_uCzY0" checked="checked"><label for="tab-C_uCzY0">使用 Node 启动</label><input type="radio" name="group-IyIhJ" id="tab-vszT86l"><label for="tab-vszT86l">使用 NestJS CLI 启动</label></div><div class="blocks"><div class="language-bash active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#FFA657;">node</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">dist/apps/core/main.js</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">\\</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">--db_host=localhost</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">\\</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">--config=core.yml</span></span>
<span class="line"></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#953800;">node</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">dist/apps/core/main.js</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">\\</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#0550AE;">--db_host=localhost</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">\\</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#0550AE;">--config=core.yml</span></span>
<span class="line"></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#FFA657;">nest</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">start</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">core</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">\\</span></span>
<span class="line"><span style="color:#C9D1D9;">	</span><span style="color:#79C0FF;">--</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">\\</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">--db_host=localhost</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">\\</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">--config=core.yml</span></span>
<span class="line"></span>
<span class="line"><span style="color:#8B949E;"># 或者是只使用 YAML 格式的配置文件</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFA657;">nest</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">start</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">core</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">\\</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">--</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">\\</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#79C0FF;">--config=core.yml</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span></span>
<span class="line"></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#953800;">nest</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">start</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">core</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">\\</span></span>
<span class="line"><span style="color:#24292F;">	</span><span style="color:#0550AE;">--</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">\\</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#0550AE;">--db_host=localhost</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">\\</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#0550AE;">--config=core.yml</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6E7781;"># 或者是只使用 YAML 格式的配置文件</span></span>
<span class="line"></span>
<span class="line"><span style="color:#953800;">nest</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">start</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">core</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">\\</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#0550AE;">--</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">\\</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#0550AE;">--config=core.yml</span></span>
<span class="line"><span style="color:#24292F;">  </span></span>
<span class="line"></span></code></pre></div></div></div><h3 id="⚠️-警告" tabindex="-1">⚠️ 警告 <a class="header-anchor" href="#⚠️-警告" aria-hidden="true">#</a></h3><p>无论如何都需要携带YAML配置文件，若不进行配置则会自动获取当前执行目录下的 env.yaml 文件，若文件不存在则会报错，如果全部默认参数也需要存在这个文件</p><p>命令行允许输入的参数有限，所以我们建议使用 YAML 格式的配置文件。有关允许命令行输入的参数可以查阅 <a href="/config/">配置索引</a></p><hr><h2 id="如何检查配置" tabindex="-1">如何检查配置？ <a class="header-anchor" href="#如何检查配置" aria-hidden="true">#</a></h2><p>当 core 启动时，你可以看到出现了一个类似于 JSON 对象的文本内容，应该出现类似的内容</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#C9D1D9;">{</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FFA657;">collection_name</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">&#39;mog&#39;</span><span style="color:#C9D1D9;">,</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#FFA657;">db_host</span><span style="color:#C9D1D9;">: </span><span style="color:#A5D6FF;">&#39;localhost&#39;</span></span>
<span class="line"><span style="color:#C9D1D9;">  </span><span style="color:#8B949E;">// ...</span></span>
<span class="line"><span style="color:#C9D1D9;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292F;">{</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#953800;">collection_name</span><span style="color:#24292F;">: </span><span style="color:#0A3069;">&#39;mog&#39;</span><span style="color:#24292F;">,</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#953800;">db_host</span><span style="color:#24292F;">: </span><span style="color:#0A3069;">&#39;localhost&#39;</span></span>
<span class="line"><span style="color:#24292F;">  </span><span style="color:#6E7781;">// ...</span></span>
<span class="line"><span style="color:#24292F;">}</span></span>
<span class="line"></span></code></pre></div><p>你可以在此处检查你的配置正确或否</p><p>更多配置项请查阅 <a href="/config/">配置索引</a></p>`,24),e=[o];function c(t,r,y,i,d,F){return a(),n("div",null,e)}const C=s(p,[["render",c]]);export{D as __pageData,C as default};
