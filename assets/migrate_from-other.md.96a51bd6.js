import{_ as r}from"./chunks/Badge.vue_vue_type_style_index_0_lang.2898a832.js";import{_ as n,o as s,c as i,d as o,e,f as t,a}from"./chunks/framework.0a9bce5f.js";const S=JSON.parse('{"title":"从其他博客系统迁移 | 迁移指南","description":"","frontmatter":{"title":"从其他博客系统迁移 | 迁移指南"},"headers":[{"level":2,"title":"使用 Markdown 迁移","slug":"markdown","link":"#markdown","children":[]},{"level":2,"title":"从 Typecho 迁移","slug":"typecho","link":"#typecho","children":[]},{"level":2,"title":"从 WordPress 迁移","slug":"wordpress","link":"#wordpress","children":[]},{"level":2,"title":"从 Ghost 迁移","slug":"ghost","link":"#ghost","children":[]},{"level":2,"title":"从 Hexo 迁移","slug":"hexo","link":"#hexo","children":[]},{"level":2,"title":"从 Jekyll 迁移","slug":"jekyll","link":"#jekyll","children":[]},{"level":2,"title":"从 Hugo 迁移","slug":"hugo","link":"#hugo","children":[]}],"relativePath":"migrate/from-other.md","lastUpdated":1680317117000}'),h={name:"migrate/from-other.md"},d=a('<h1 id="从其他博客系统迁移" tabindex="-1">从其他博客系统迁移 <a class="header-anchor" href="#从其他博客系统迁移" aria-label="Permalink to &quot;从其他博客系统迁移&quot;">​</a></h1><h2 id="markdown" tabindex="-1">使用 Markdown 迁移 <a class="header-anchor" href="#markdown" aria-label="Permalink to &quot;使用 Markdown 迁移 {#markdown}&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>你的 Markdown 文件必须要携带 YAML Front Matter，并且最好是符合 <a href="https://commonmark.org/" target="_blank" rel="noreferrer">CommonMark</a> 规范的，否则可能会出现一些问题。</p></div><p>如果你的博客系统支持 Markdown，那么你可以直接将你的博客内容导出为 Markdown 文件，然后在 Mog 后台的迁移页面，导入这些 Markdown 文件。</p><h2 id="typecho" tabindex="-1">从 Typecho 迁移 <a class="header-anchor" href="#typecho" aria-label="Permalink to &quot;从 Typecho 迁移 {#typecho}&quot;">​</a></h2>',5),c={href:"#typecho"},_=o("li",null,"在后台的插件管理页面，点击 MogRun 插件的设置按钮，选择你要导出的内容，点击导出按钮。",-1),u=o("li",null,[e("下载导出的 zip 文件，解压后，将其中的 "),o("code",null,"data.json"),e(" 文件放入 Mog 后台的迁移页面，点击导入按钮。")],-1),k=o("li",null,"等待导入完成，即可完成迁移。",-1),g=o("h2",{id:"wordpress",tabindex:"-1"},[e("从 WordPress 迁移 "),o("a",{class:"header-anchor",href:"#wordpress","aria-label":'Permalink to "从 WordPress 迁移 {#wordpress}"'},"​")],-1),p={href:"#wordpress"},M=o("li",null,"在后台的插件管理页面，点击 MogRun 插件的设置按钮，选择你要导出的内容，点击导出按钮。",-1),m=o("li",null,[e("下载导出的 zip 文件，解压后，将其中的 "),o("code",null,"data.json"),e(" 文件放入 Mog 后台的迁移页面，点击导入按钮。")],-1),f=o("li",null,"等待导入完成，即可完成迁移。",-1),x=o("h2",{id:"ghost",tabindex:"-1"},[e("从 Ghost 迁移 "),o("a",{class:"header-anchor",href:"#ghost","aria-label":'Permalink to "从 Ghost 迁移 {#ghost}"'},"​")],-1),w={href:"#ghost"},y=o("li",null,"在后台的插件管理页面，点击 MogRun 插件的设置按钮，选择你要导出的内容，点击导出按钮。",-1),P=o("li",null,[e("下载导出的 zip 文件，解压后，将其中的 "),o("code",null,"data.json"),e(" 文件放入 Mog 后台的迁移页面，点击导入按钮。")],-1),b=o("li",null,"等待导入完成，即可完成迁移。",-1),T=a('<h2 id="hexo" tabindex="-1">从 Hexo 迁移 <a class="header-anchor" href="#hexo" aria-label="Permalink to &quot;从 Hexo 迁移 {#hexo}&quot;">​</a></h2><p>因为 Hexo 为静态博客，其文件使用的是 Markdown + YAML Front Matter 的格式，所以你可以直接将 Hexo 的博客文件导入到 Mog 中。</p><ol><li>打包 Hexo 的博客文章 Markdown 文件，将其放入 Mog 后台的迁移页面，点击导入按钮。</li></ol><h2 id="jekyll" tabindex="-1">从 Jekyll 迁移 <a class="header-anchor" href="#jekyll" aria-label="Permalink to &quot;从 Jekyll 迁移 {#jekyll}&quot;">​</a></h2><p>因为 Jekyll 为静态博客，其文件使用的是 Markdown + YAML Front Matter 的格式，所以你可以直接将 Jekyll 的博客文件导入到 Mog 中。</p><ol><li>打包 Jekyll 的博客文章 Markdown 文件，将其放入 Mog 后台的迁移页面，点击导入按钮。</li></ol><h2 id="hugo" tabindex="-1">从 Hugo 迁移 <a class="header-anchor" href="#hugo" aria-label="Permalink to &quot;从 Hugo 迁移 {#hugo}&quot;">​</a></h2><p>因为 Hugo 为静态博客，其文件使用的是 Markdown + YAML Front Matter 的格式，所以你可以直接将 Hugo 的博客文件导入到 Mog 中。</p><ol><li>打包 Hugo 的博客文章 Markdown 文件，将其放入 Mog 后台的迁移页面，点击导入按钮。</li></ol>',9);function q(H,v,A,N,R,W){const l=r;return s(),i("div",null,[d,o("ol",null,[o("li",null,[e("下载 Typecho 数据导出插件 "),o("a",c,[e("MogRun-Typecho "),t(l,{text:"WIP",color:"gray"})]),e(" 插件，安装并启用。")]),_,u,k]),g,o("ol",null,[o("li",null,[e("下载 WordPress 数据导出插件 "),o("a",p,[e("MogRun-WordPress "),t(l,{text:"WIP",color:"gray"})]),e(" 插件，安装并启用。")]),M,m,f]),x,o("ol",null,[o("li",null,[e("下载 Ghost 数据导出插件 "),o("a",w,[e("MogRun-Ghost "),t(l,{text:"WIP",color:"gray"})]),e(" 插件，安装并启用。")]),y,P,b]),T])}const V=n(h,[["render",q]]);export{S as __pageData,V as default};
