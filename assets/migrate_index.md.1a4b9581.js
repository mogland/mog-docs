import{_ as a,o as s,c as o,a as n}from"./app.bbe1740c.js";const h=JSON.parse('{"title":"升级版本 | 迁移指南","description":"","frontmatter":{"title":"升级版本 | 迁移指南"},"headers":[{"level":2,"title":"从 Mog v1 升级到 Mog v2","slug":"从-mog-v1-升级到-mog-v2","link":"#从-mog-v1-升级到-mog-v2","children":[]},{"level":2,"title":"从 Mog v2.internal.alpha 升级到 Mog v2.internal.beta","slug":"从-mog-v2-internal-alpha-升级到-mog-v2-internal-beta","link":"#从-mog-v2-internal-alpha-升级到-mog-v2-internal-beta","children":[]},{"level":2,"title":"从 Mog v0 升级到 Mog v1","slug":"从-mog-v0-升级到-mog-v1","link":"#从-mog-v0-升级到-mog-v1","children":[]}],"relativePath":"migrate/index.md","lastUpdated":1674389854000}'),e={name:"migrate/index.md"},l=n(`<h1 id="升级版本" tabindex="-1">升级版本 <a class="header-anchor" href="#升级版本" aria-hidden="true">#</a></h1><h2 id="从-mog-v1-升级到-mog-v2" tabindex="-1">从 Mog v1 升级到 Mog v2 <a class="header-anchor" href="#从-mog-v1-升级到-mog-v2" aria-hidden="true">#</a></h2><p>v1 至 v2 的技术栈改动不大，但是很重要，大部分沿用的是 v1 的技术栈，但是 v2 对数据模型和程序结构有一些重大的改动，其中有部分是修复了 v1 的一些设计缺陷导致的严重问题。</p><p>你可以通过以下方式升级到 v2：</p><ul><li>前往 Console，前往「导入与备份」页面，点击「导出 MnogoDB 数据」，下载数据备份文件，再点击「导出 Markdown 数据」，下载 Markdown 数据备份文件</li><li>前往命令行，使用 MongoDB 的 <code>mongodump</code> 命令导出数据备份文件</li></ul><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;"># 假设 MongoDB 的数据存储在 /data/db 目录下</span></span>
<span class="line"><span style="color:#80A665;">mongodump</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">--db</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">mog</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">--out</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">/data/db/mog</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;"># 假设 MongoDB 的数据存储在 /data/db 目录下</span></span>
<span class="line"><span style="color:#59873A;">mongodump</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">--db</span><span style="color:#393A34;"> </span><span style="color:#B56959;">mog</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">--out</span><span style="color:#393A34;"> </span><span style="color:#B56959;">/data/db/mog</span></span>
<span class="line"></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">注意</p><p>导出的数据备份文件需要保证在导入之前不要被修改，否则可能会导致数据丢失</p><p>直接使用 <code>mongodump</code> 导出的数据备份文件可能在 v2 导入时会无法使用，需要使用 <code>mongorestore</code> 命令进行转换，或只使用 Markdown 数据备份文件进行导入</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#80A665;">mongorestore</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">--db</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">mog</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">--dir</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">/data/db/mog</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#59873A;">mongorestore</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">--db</span><span style="color:#393A34;"> </span><span style="color:#B56959;">mog</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">--dir</span><span style="color:#393A34;"> </span><span style="color:#B56959;">/data/db/mog</span></span>
<span class="line"></span></code></pre></div></div><h2 id="从-mog-v2-internal-alpha-升级到-mog-v2-internal-beta" tabindex="-1">从 Mog v2.internal.alpha 升级到 Mog v2.internal.beta <a class="header-anchor" href="#从-mog-v2-internal-alpha-升级到-mog-v2-internal-beta" aria-hidden="true">#</a></h2><p>v2.internal.beta 对服务进行了补充以及重要的破坏性修改。主要针对的是配置文件配置项的改动：</p><ol><li>x-service 将不再支持 <code>port</code>, <code>host</code> 配置项，全部服务将使用 redis 作为事件总线，默认情况下，只需要删除对应的配置项即可，若无配置可无视此项</li><li>Core 内置基本模块在现有阶段暂时全部移除，在后续可能会继续引入，这取决于社区基本模块的需求量</li></ol><h2 id="从-mog-v0-升级到-mog-v1" tabindex="-1">从 Mog v0 升级到 Mog v1 <a class="header-anchor" href="#从-mog-v0-升级到-mog-v1" aria-hidden="true">#</a></h2><p>问题是这样的，v0 我们使用的是 MySQL 作为数据库，而 v1 我们使用的是 MongoDB，其中使用了很多 MongoDB 的特性，因此无法直接升级。</p><p>目前只有一个可行的方案：</p><ul><li>将 v0 的文章页面数据导出，然后导入到 v1 中，v0 和 v1 在处理文章页面数据的方式是一致的，因此可以直接导入。</li></ul><p>由于 v0 是 Beta 版本，充满了不确定性，因此我们无法保证导出的数据能够完全正确导入到 v1 中，因此我们建议你在导入之前先备份好 v1 的数据库。</p>`,15),p=[l];function t(r,c,i,d,g,v){return s(),o("div",null,p)}const y=a(e,[["render",t]]);export{h as __pageData,y as default};
