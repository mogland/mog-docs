import{_ as s,o as n,c as a,a as p}from"./app.bf595e79.js";const C=JSON.parse('{"title":"拓展新的服务模块","description":"","frontmatter":{},"headers":[{"level":2,"title":"创建一个微服务模块","slug":"创建一个微服务模块","link":"#创建一个微服务模块","children":[]},{"level":2,"title":"使用微服务订阅事件","slug":"使用微服务订阅事件","link":"#使用微服务订阅事件","children":[]},{"level":2,"title":"在网关层订阅事件","slug":"在网关层订阅事件","link":"#在网关层订阅事件","children":[]},{"level":2,"title":"当收到请求时，事件发生了什么变化","slug":"当收到请求时-事件发生了什么变化","link":"#当收到请求时-事件发生了什么变化","children":[]},{"level":2,"title":"使用 NodeJS 写一个微服务","slug":"使用-nodejs-写一个微服务","link":"#使用-nodejs-写一个微服务","children":[]},{"level":2,"title":"在 Mog Core 中注册事件","slug":"在-mog-core-中注册事件","link":"#在-mog-core-中注册事件","children":[]},{"level":2,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[]}],"relativePath":"developer/extend-service.md","lastUpdated":1676195754000}'),l={name:"developer/extend-service.md"},o=p(`<h1 id="拓展新的服务模块" tabindex="-1">拓展新的服务模块 <a class="header-anchor" href="#拓展新的服务模块" aria-hidden="true">#</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>此文章仅考虑的是 NestJS Gateway 场景下，对于其他情况暂时不做解释，按理来说应该你也能理解。</p><p>此外，这篇文章使用的是 Redis 作为传输层，你需要知道基本操作才能来看此文章，并且此文章仅讲述交互原理。</p><hr><p>文章来自 <a href="https://blog.iucky.cn/posts/programming/use-nestjs-microservice-with-other-tech" target="_blank" rel="noreferrer">可愛い松 | NestJS 微服务通过订阅发布事件与其他技术栈交互</a>, 但基于 Mog 做了部分补充</p></div><p>如果你想直接越过解释前往实践，可以直接看 <a href="#%E4%BD%BF%E7%94%A8-nodejs-%E5%86%99%E4%B8%80%E4%B8%AA%E5%BE%AE%E6%9C%8D%E5%8A%A1">使用 NodeJS 写一个微服务</a> 这一节</p><h2 id="创建一个微服务模块" tabindex="-1">创建一个微服务模块 <a class="header-anchor" href="#创建一个微服务模块" aria-hidden="true">#</a></h2><p>使用 <code>nest g app tester</code> NestJS CLI 将会自动帮你创建对应的模块，但是你需要自己修改部分内容，比如在 main.ts，你需要将 <code>create</code> 替换为 <code>createMicroservice</code>，还有其他的，但是需要注意的是，请将 transporter 设置为 REDIS</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">app</span><span style="color:#CB7676;"> = </span><span style="color:#4D9375;">await</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">NestFactory</span><span style="color:#666666;">.</span><span style="color:#80A665;">createMicroservice</span><span style="color:#666666;">&lt;</span><span style="color:#5DA9A7;">MicroserviceOptions</span><span style="color:#666666;">&gt;(</span></span>
<span class="line"><span style="color:#CB7676;">    </span><span style="color:#BD976A;">YourModule</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#CB7676;">    </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#B8A965;">transport</span><span style="color:#666666;">: </span><span style="color:#BD976A;">Transport</span><span style="color:#666666;">.</span><span style="color:#BD976A;">REDIS</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#B8A965;">options</span><span style="color:#666666;">: {</span></span>
<span class="line"><span style="color:#666666;">        </span><span style="color:#B8A965;">port</span><span style="color:#666666;">: </span><span style="color:#BD976A;">REDIS</span><span style="color:#666666;">.</span><span style="color:#BD976A;">port</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">        </span><span style="color:#B8A965;">host</span><span style="color:#666666;">: </span><span style="color:#BD976A;">REDIS</span><span style="color:#666666;">.</span><span style="color:#BD976A;">host</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">        </span><span style="color:#B8A965;">password</span><span style="color:#666666;">: </span><span style="color:#BD976A;">REDIS</span><span style="color:#666666;">.</span><span style="color:#BD976A;">password</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">        </span><span style="color:#B8A965;">username</span><span style="color:#666666;">: </span><span style="color:#BD976A;">REDIS</span><span style="color:#666666;">.</span><span style="color:#BD976A;">user</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">      },</span></span>
<span class="line"><span style="color:#666666;">    },</span><span style="color:#BD976A;">Ï</span></span>
<span class="line"><span style="color:#CB7676;">  </span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#4D9375;">await</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">app</span><span style="color:#666666;">.</span><span style="color:#80A665;">listen</span><span style="color:#666666;">();</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">app</span><span style="color:#AB5959;"> = </span><span style="color:#1E754F;">await</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">NestFactory</span><span style="color:#999999;">.</span><span style="color:#59873A;">createMicroservice</span><span style="color:#999999;">&lt;</span><span style="color:#2E808F;">MicroserviceOptions</span><span style="color:#999999;">&gt;(</span></span>
<span class="line"><span style="color:#AB5959;">    </span><span style="color:#B07D48;">YourModule</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#AB5959;">    </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#998418;">transport</span><span style="color:#999999;">: </span><span style="color:#B07D48;">Transport</span><span style="color:#999999;">.</span><span style="color:#B07D48;">REDIS</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#998418;">options</span><span style="color:#999999;">: {</span></span>
<span class="line"><span style="color:#999999;">        </span><span style="color:#998418;">port</span><span style="color:#999999;">: </span><span style="color:#B07D48;">REDIS</span><span style="color:#999999;">.</span><span style="color:#B07D48;">port</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">        </span><span style="color:#998418;">host</span><span style="color:#999999;">: </span><span style="color:#B07D48;">REDIS</span><span style="color:#999999;">.</span><span style="color:#B07D48;">host</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">        </span><span style="color:#998418;">password</span><span style="color:#999999;">: </span><span style="color:#B07D48;">REDIS</span><span style="color:#999999;">.</span><span style="color:#B07D48;">password</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">        </span><span style="color:#998418;">username</span><span style="color:#999999;">: </span><span style="color:#B07D48;">REDIS</span><span style="color:#999999;">.</span><span style="color:#B07D48;">user</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">      },</span></span>
<span class="line"><span style="color:#999999;">    },</span><span style="color:#B07D48;">Ï</span></span>
<span class="line"><span style="color:#AB5959;">  </span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#1E754F;">await</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">app</span><span style="color:#999999;">.</span><span style="color:#59873A;">listen</span><span style="color:#999999;">();</span></span>
<span class="line"></span></code></pre></div><p>接下来我们使用 redis-cli 来监控事件变化</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#BD976A;">redis</span><span style="color:#CB7676;">-</span><span style="color:#BD976A;">cli</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">monitor</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#B07D48;">redis</span><span style="color:#AB5959;">-</span><span style="color:#B07D48;">cli</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">monitor</span></span>
<span class="line"></span></code></pre></div><h2 id="使用微服务订阅事件" tabindex="-1">使用微服务订阅事件 <a class="header-anchor" href="#使用微服务订阅事件" aria-hidden="true">#</a></h2><p>与 <code>@nestjs/common</code> 中不一样的 <code>@Get()</code>，你需要使用在 microservices 包内的 MessagePattern，以下是一个示范</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#666666;">@</span><span style="color:#80A665;">MessagePattern</span><span style="color:#666666;">({ </span><span style="color:#B8A965;">cmd</span><span style="color:#666666;">: </span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">get.something</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;"> })</span></span>
<span class="line"><span style="color:#BD976A;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">getSomething</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#C98A7D;">getSomething</span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#999999;">@</span><span style="color:#59873A;">MessagePattern</span><span style="color:#999999;">({ </span><span style="color:#998418;">cmd</span><span style="color:#999999;">: </span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">get.something</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;"> })</span></span>
<span class="line"><span style="color:#B07D48;">async</span><span style="color:#393A34;"> </span><span style="color:#59873A;">getSomething</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">getSomething</span><span style="color:#B56959AA;">&#39;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span></code></pre></div><p>接下来，启动这个微服务，注意一下上方 redis-cli monitor 出现的日志</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4C9A91;">1673269961.656461</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[</span><span style="color:#4C9A91;">0</span><span style="color:#DBD7CAEE;"> 127.0.0.1:</span><span style="color:#4C9A91;">63956</span><span style="color:#666666;">]</span><span style="color:#C98A7DAA;"> &quot;</span><span style="color:#C98A7D;">info</span><span style="color:#C98A7DAA;">&quot;</span></span>
<span class="line"><span style="color:#4C9A91;">1673269961.657177</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[</span><span style="color:#4C9A91;">0</span><span style="color:#DBD7CAEE;"> 127.0.0.1:</span><span style="color:#4C9A91;">63957</span><span style="color:#666666;">]</span><span style="color:#C98A7DAA;"> &quot;</span><span style="color:#C98A7D;">info</span><span style="color:#C98A7DAA;">&quot;</span></span>
<span class="line"><span style="color:#4C9A91;">1673269961.659145</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[</span><span style="color:#4C9A91;">0</span><span style="color:#DBD7CAEE;"> 127.0.0.1:</span><span style="color:#4C9A91;">63956</span><span style="color:#666666;">]</span><span style="color:#C98A7DAA;"> &quot;</span><span style="color:#C98A7D;">subscribe</span><span style="color:#C98A7DAA;">&quot; &quot;</span><span style="color:#C98A7D;"> {</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">cmd</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">get.something</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#2F798A;">1673269961.656461</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span><span style="color:#2F798A;">0</span><span style="color:#393A34;"> 127.0.0.1:</span><span style="color:#2F798A;">63956</span><span style="color:#999999;">]</span><span style="color:#B56959AA;"> &quot;</span><span style="color:#B56959;">info</span><span style="color:#B56959AA;">&quot;</span></span>
<span class="line"><span style="color:#2F798A;">1673269961.657177</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span><span style="color:#2F798A;">0</span><span style="color:#393A34;"> 127.0.0.1:</span><span style="color:#2F798A;">63957</span><span style="color:#999999;">]</span><span style="color:#B56959AA;"> &quot;</span><span style="color:#B56959;">info</span><span style="color:#B56959AA;">&quot;</span></span>
<span class="line"><span style="color:#2F798A;">1673269961.659145</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span><span style="color:#2F798A;">0</span><span style="color:#393A34;"> 127.0.0.1:</span><span style="color:#2F798A;">63956</span><span style="color:#999999;">]</span><span style="color:#B56959AA;"> &quot;</span><span style="color:#B56959;">subscribe</span><span style="color:#B56959AA;">&quot; &quot;</span><span style="color:#B56959;"> {</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">cmd</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">get.something</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">}</span></span>
<span class="line"></span></code></pre></div><p>看样子我们找到了一个开始订阅的事件，让我们记住这一个事件，继续下去。</p><blockquote><p>后续，我将使用 <code>user.get.master</code> 来代替 <code>get.something</code> 事件</p><p>另外，这种事件命名方式并不是必须的，这只是我个人习惯</p></blockquote><h2 id="在网关层订阅事件" tabindex="-1">在网关层订阅事件 <a class="header-anchor" href="#在网关层订阅事件" aria-hidden="true">#</a></h2><p>你需要在网关层模块中导入一个 <code>ClientModule</code>：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#BD976A;">ClientsModule</span><span style="color:#666666;">.</span><span style="color:#80A665;">register</span><span style="color:#666666;">([</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">        </span><span style="color:#B8A965;">name</span><span style="color:#666666;">: </span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">YOUR_MODULE</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">        </span><span style="color:#B8A965;">transport</span><span style="color:#666666;">: </span><span style="color:#BD976A;">Transport</span><span style="color:#666666;">.</span><span style="color:#BD976A;">REDIS</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">        </span><span style="color:#B8A965;">options</span><span style="color:#666666;">: {</span></span>
<span class="line"><span style="color:#666666;">          </span><span style="color:#B8A965;">port</span><span style="color:#666666;">: </span><span style="color:#BD976A;">REDIS</span><span style="color:#666666;">.</span><span style="color:#BD976A;">port</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">          </span><span style="color:#B8A965;">host</span><span style="color:#666666;">: </span><span style="color:#BD976A;">REDIS</span><span style="color:#666666;">.</span><span style="color:#BD976A;">host</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">          </span><span style="color:#B8A965;">password</span><span style="color:#666666;">: </span><span style="color:#BD976A;">REDIS</span><span style="color:#666666;">.</span><span style="color:#BD976A;">password</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">          </span><span style="color:#B8A965;">username</span><span style="color:#666666;">: </span><span style="color:#BD976A;">REDIS</span><span style="color:#666666;">.</span><span style="color:#BD976A;">user</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">        },</span></span>
<span class="line"><span style="color:#666666;">      },</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">]),</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#B07D48;">ClientsModule</span><span style="color:#999999;">.</span><span style="color:#59873A;">register</span><span style="color:#999999;">([</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">        </span><span style="color:#998418;">name</span><span style="color:#999999;">: </span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">YOUR_MODULE</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">        </span><span style="color:#998418;">transport</span><span style="color:#999999;">: </span><span style="color:#B07D48;">Transport</span><span style="color:#999999;">.</span><span style="color:#B07D48;">REDIS</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">        </span><span style="color:#998418;">options</span><span style="color:#999999;">: {</span></span>
<span class="line"><span style="color:#999999;">          </span><span style="color:#998418;">port</span><span style="color:#999999;">: </span><span style="color:#B07D48;">REDIS</span><span style="color:#999999;">.</span><span style="color:#B07D48;">port</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">          </span><span style="color:#998418;">host</span><span style="color:#999999;">: </span><span style="color:#B07D48;">REDIS</span><span style="color:#999999;">.</span><span style="color:#B07D48;">host</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">          </span><span style="color:#998418;">password</span><span style="color:#999999;">: </span><span style="color:#B07D48;">REDIS</span><span style="color:#999999;">.</span><span style="color:#B07D48;">password</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">          </span><span style="color:#998418;">username</span><span style="color:#999999;">: </span><span style="color:#B07D48;">REDIS</span><span style="color:#999999;">.</span><span style="color:#B07D48;">user</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">        },</span></span>
<span class="line"><span style="color:#999999;">      },</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">]),</span></span>
<span class="line"></span></code></pre></div><p>之后在 controller 构造函数中注入它，再任意搞一个请求：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#80A665;">constructor</span><span style="color:#666666;">(</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    @</span><span style="color:#80A665;">Inject</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">YOUR_MODULE</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">private</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">readonly</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">yourModule</span><span style="color:#DBD7CAEE;">: </span><span style="color:#BD976A;">ClientProxy</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#666666;">@</span><span style="color:#80A665;">Get</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#C98A7D;">/</span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#BD976A;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">getMaster</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">category</span><span style="color:#666666;">.</span><span style="color:#80A665;">send</span><span style="color:#666666;">({ </span><span style="color:#B8A965;">cmd</span><span style="color:#666666;">: </span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">user.get.master</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;"> },</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{})</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#59873A;">constructor</span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">    @</span><span style="color:#59873A;">Inject</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">YOUR_MODULE</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">private</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">readonly</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">yourModule</span><span style="color:#393A34;">: </span><span style="color:#B07D48;">ClientProxy</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">@</span><span style="color:#59873A;">Get</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">/</span><span style="color:#B56959AA;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#B07D48;">async</span><span style="color:#393A34;"> </span><span style="color:#59873A;">getMaster</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">category</span><span style="color:#999999;">.</span><span style="color:#59873A;">send</span><span style="color:#999999;">({ </span><span style="color:#998418;">cmd</span><span style="color:#999999;">: </span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">user.get.master</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;"> },</span><span style="color:#393A34;"> </span><span style="color:#999999;">{})</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span></code></pre></div><p>让我们继续启动网关层，redis-cli monitor 此时不会出现任何日志，这是正常的</p><h2 id="当收到请求时-事件发生了什么变化" tabindex="-1">当收到请求时，事件发生了什么变化 <a class="header-anchor" href="#当收到请求时-事件发生了什么变化" aria-hidden="true">#</a></h2><p>我们访问一下网关层中配置的路径，注意一下 redis-cli monitor 出现的日志：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4C9A91;">1673270738.710378</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[</span><span style="color:#4C9A91;">0</span><span style="color:#DBD7CAEE;"> 127.0.0.1:</span><span style="color:#4C9A91;">64424</span><span style="color:#666666;">]</span><span style="color:#C98A7DAA;"> &quot;</span><span style="color:#C98A7D;">subscribe</span><span style="color:#C98A7DAA;">&quot; &quot;</span><span style="color:#C98A7D;">{</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">cmd</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">user.get.master</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">}.reply</span><span style="color:#C98A7DAA;">&quot;</span></span>
<span class="line"><span style="color:#4C9A91;">1673270738.710744</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[</span><span style="color:#4C9A91;">0</span><span style="color:#DBD7CAEE;"> 127.0.0.1:</span><span style="color:#4C9A91;">64425</span><span style="color:#666666;">]</span><span style="color:#C98A7DAA;"> &quot;</span><span style="color:#C98A7D;">publish</span><span style="color:#C98A7DAA;">&quot; &quot;</span><span style="color:#C98A7D;">{</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">cmd</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">user.get.master</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">}</span><span style="color:#C98A7DAA;">&quot; &quot;</span><span style="color:#C98A7D;">{</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">pattern</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:{</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">cmd</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">user.get.master</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">},</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">data</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:{},</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">id</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">6c1475df-b357-4bc9-8443-5f0f06bf8e0b</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">}</span><span style="color:#C98A7DAA;">&quot;</span></span>
<span class="line"><span style="color:#4C9A91;">1673270738.781133</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[</span><span style="color:#4C9A91;">0</span><span style="color:#DBD7CAEE;"> 127.0.0.1:</span><span style="color:#4C9A91;">64931</span><span style="color:#666666;">]</span><span style="color:#C98A7DAA;"> &quot;</span><span style="color:#C98A7D;">publish</span><span style="color:#C98A7DAA;">&quot; &quot;</span><span style="color:#C98A7D;">{</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">cmd</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">user.get.master</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">}.reply</span><span style="color:#C98A7DAA;">&quot; &quot;</span><span style="color:#C98A7D;">{</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">response</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:{</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">_id</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">638c311569199e8250503d80</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">,</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">username</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">wibus-wee</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">,</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">nickname</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">Wibus</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">,</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">description</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">\\xe6\\x88\\x91\\xe6\\x98\\xaf\\xe7\\xbb\\x83\\xe4\\xb9\\xa0\\xe6\\x97\\xb6\\xe9\\x95\\xbf\\xe4\\xb8\\xa4\\xe5\\xb9\\xb4\\xe5\\x8d\\x8a\\xe7\\x9a\\x84\\xe4\\xb8\\xaa\\xe4\\xba\\xba\\xe7\\xbb\\x83\\xe4\\xb9\\xa0\\xe7\\x94\\x9f</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">,</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">avatar</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">http://example.com</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">,</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">email</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">example@example.com</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">,</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">url</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">http://example.com</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">,</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">role</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:0,</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">created</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">2022-12-04T05:33:09.526Z</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">,</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">__v</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:0,</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">lastLoginTime</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">2023-01-09T08:39:39.723Z</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">,</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">id</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">638c311569199e8250503d80</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">},</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">isDisposed</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:true,</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">id</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">da1d3910-5e1b-4193-8637-9cbfdd8ebac1</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">}</span><span style="color:#C98A7DAA;">&quot;</span></span>
<span class="line"><span style="color:#4C9A91;">1673270738.714335</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[</span><span style="color:#4C9A91;">0</span><span style="color:#DBD7CAEE;"> 127.0.0.1:</span><span style="color:#4C9A91;">64424</span><span style="color:#666666;">]</span><span style="color:#C98A7DAA;"> &quot;</span><span style="color:#C98A7D;">unsubscribe</span><span style="color:#C98A7DAA;">&quot; &quot;</span><span style="color:#C98A7D;">{</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">cmd</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">user.get.master</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">}.reply</span><span style="color:#C98A7DAA;">&quot;</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#2F798A;">1673270738.710378</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span><span style="color:#2F798A;">0</span><span style="color:#393A34;"> 127.0.0.1:</span><span style="color:#2F798A;">64424</span><span style="color:#999999;">]</span><span style="color:#B56959AA;"> &quot;</span><span style="color:#B56959;">subscribe</span><span style="color:#B56959AA;">&quot; &quot;</span><span style="color:#B56959;">{</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">cmd</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">user.get.master</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">}.reply</span><span style="color:#B56959AA;">&quot;</span></span>
<span class="line"><span style="color:#2F798A;">1673270738.710744</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span><span style="color:#2F798A;">0</span><span style="color:#393A34;"> 127.0.0.1:</span><span style="color:#2F798A;">64425</span><span style="color:#999999;">]</span><span style="color:#B56959AA;"> &quot;</span><span style="color:#B56959;">publish</span><span style="color:#B56959AA;">&quot; &quot;</span><span style="color:#B56959;">{</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">cmd</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">user.get.master</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">}</span><span style="color:#B56959AA;">&quot; &quot;</span><span style="color:#B56959;">{</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">pattern</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:{</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">cmd</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">user.get.master</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">},</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">data</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:{},</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">id</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">6c1475df-b357-4bc9-8443-5f0f06bf8e0b</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">}</span><span style="color:#B56959AA;">&quot;</span></span>
<span class="line"><span style="color:#2F798A;">1673270738.781133</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span><span style="color:#2F798A;">0</span><span style="color:#393A34;"> 127.0.0.1:</span><span style="color:#2F798A;">64931</span><span style="color:#999999;">]</span><span style="color:#B56959AA;"> &quot;</span><span style="color:#B56959;">publish</span><span style="color:#B56959AA;">&quot; &quot;</span><span style="color:#B56959;">{</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">cmd</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">user.get.master</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">}.reply</span><span style="color:#B56959AA;">&quot; &quot;</span><span style="color:#B56959;">{</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">response</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:{</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">_id</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">638c311569199e8250503d80</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">,</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">username</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">wibus-wee</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">,</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">nickname</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">Wibus</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">,</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">description</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">\\xe6\\x88\\x91\\xe6\\x98\\xaf\\xe7\\xbb\\x83\\xe4\\xb9\\xa0\\xe6\\x97\\xb6\\xe9\\x95\\xbf\\xe4\\xb8\\xa4\\xe5\\xb9\\xb4\\xe5\\x8d\\x8a\\xe7\\x9a\\x84\\xe4\\xb8\\xaa\\xe4\\xba\\xba\\xe7\\xbb\\x83\\xe4\\xb9\\xa0\\xe7\\x94\\x9f</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">,</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">avatar</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">http://example.com</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">,</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">email</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">example@example.com</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">,</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">url</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">http://example.com</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">,</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">role</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:0,</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">created</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">2022-12-04T05:33:09.526Z</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">,</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">__v</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:0,</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">lastLoginTime</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">2023-01-09T08:39:39.723Z</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">,</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">id</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">638c311569199e8250503d80</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">},</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">isDisposed</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:true,</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">id</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">da1d3910-5e1b-4193-8637-9cbfdd8ebac1</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">}</span><span style="color:#B56959AA;">&quot;</span></span>
<span class="line"><span style="color:#2F798A;">1673270738.714335</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span><span style="color:#2F798A;">0</span><span style="color:#393A34;"> 127.0.0.1:</span><span style="color:#2F798A;">64424</span><span style="color:#999999;">]</span><span style="color:#B56959AA;"> &quot;</span><span style="color:#B56959;">unsubscribe</span><span style="color:#B56959AA;">&quot; &quot;</span><span style="color:#B56959;">{</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">cmd</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">user.get.master</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">}.reply</span><span style="color:#B56959AA;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>这日志有点辣眼睛，而且这个是我们开了网关层 &amp; 微服务出现的日志，我们暂时只想知道网关层，我们将上面的微服务关掉，再访问一次：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4C9A91;">1673270936.835823</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[</span><span style="color:#4C9A91;">0</span><span style="color:#DBD7CAEE;"> 127.0.0.1:</span><span style="color:#4C9A91;">64424</span><span style="color:#666666;">]</span><span style="color:#C98A7DAA;"> &quot;</span><span style="color:#C98A7D;">subscribe</span><span style="color:#C98A7DAA;">&quot; &quot;</span><span style="color:#C98A7D;">{</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">cmd</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">user.get.master</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">}.reply</span><span style="color:#C98A7DAA;">&quot;</span></span>
<span class="line"><span style="color:#4C9A91;">1673270936.836329</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[</span><span style="color:#4C9A91;">0</span><span style="color:#DBD7CAEE;"> 127.0.0.1:</span><span style="color:#4C9A91;">64425</span><span style="color:#666666;">]</span><span style="color:#C98A7DAA;"> &quot;</span><span style="color:#C98A7D;">publish</span><span style="color:#C98A7DAA;">&quot; &quot;</span><span style="color:#C98A7D;">{</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">cmd</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">user.get.master</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">}</span><span style="color:#C98A7DAA;">&quot; &quot;</span><span style="color:#C98A7D;">{</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">pattern</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:{</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">cmd</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">user.get.master</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">},</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">data</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:{},</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">id</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">f118b8f7-26ce-44dc-b8b0-592fceab1250</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">}</span><span style="color:#C98A7DAA;">&quot;</span></span>
<span class="line"><span style="color:#4C9A91;">1673270939.835447</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[</span><span style="color:#4C9A91;">0</span><span style="color:#DBD7CAEE;"> 127.0.0.1:</span><span style="color:#4C9A91;">64424</span><span style="color:#666666;">]</span><span style="color:#C98A7DAA;"> &quot;</span><span style="color:#C98A7D;">unsubscribe</span><span style="color:#C98A7DAA;">&quot; &quot;</span><span style="color:#C98A7D;">{</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">cmd</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">user.get.master</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">}.reply</span><span style="color:#C98A7DAA;">&quot;</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#2F798A;">1673270936.835823</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span><span style="color:#2F798A;">0</span><span style="color:#393A34;"> 127.0.0.1:</span><span style="color:#2F798A;">64424</span><span style="color:#999999;">]</span><span style="color:#B56959AA;"> &quot;</span><span style="color:#B56959;">subscribe</span><span style="color:#B56959AA;">&quot; &quot;</span><span style="color:#B56959;">{</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">cmd</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">user.get.master</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">}.reply</span><span style="color:#B56959AA;">&quot;</span></span>
<span class="line"><span style="color:#2F798A;">1673270936.836329</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span><span style="color:#2F798A;">0</span><span style="color:#393A34;"> 127.0.0.1:</span><span style="color:#2F798A;">64425</span><span style="color:#999999;">]</span><span style="color:#B56959AA;"> &quot;</span><span style="color:#B56959;">publish</span><span style="color:#B56959AA;">&quot; &quot;</span><span style="color:#B56959;">{</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">cmd</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">user.get.master</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">}</span><span style="color:#B56959AA;">&quot; &quot;</span><span style="color:#B56959;">{</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">pattern</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:{</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">cmd</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">user.get.master</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">},</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">data</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:{},</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">id</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">f118b8f7-26ce-44dc-b8b0-592fceab1250</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">}</span><span style="color:#B56959AA;">&quot;</span></span>
<span class="line"><span style="color:#2F798A;">1673270939.835447</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span><span style="color:#2F798A;">0</span><span style="color:#393A34;"> 127.0.0.1:</span><span style="color:#2F798A;">64424</span><span style="color:#999999;">]</span><span style="color:#B56959AA;"> &quot;</span><span style="color:#B56959;">unsubscribe</span><span style="color:#B56959AA;">&quot; &quot;</span><span style="color:#B56959;">{</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">cmd</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">user.get.master</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">}.reply</span><span style="color:#B56959AA;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>我们精简一下，将无用的数据去掉，只留下我们想要的东西吧：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">subscribe</span><span style="color:#C98A7DAA;">&quot; &quot;</span><span style="color:#C98A7D;">cmd.reply</span><span style="color:#C98A7DAA;">&quot;</span></span>
<span class="line"><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">publish</span><span style="color:#C98A7DAA;">&quot; &quot;</span><span style="color:#C98A7D;">cmd</span><span style="color:#C98A7DAA;">&quot; &quot;</span><span style="color:#C98A7D;">{</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">pattern</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:{</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">cmd</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">user.get.master</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">},</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">data</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:{},</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">id</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">:</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">6c1475df-b357-4bc9-8443-5f0f06bf8e0b</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">}</span><span style="color:#C98A7DAA;">&quot;</span></span>
<span class="line"><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">unsubscribe</span><span style="color:#C98A7DAA;">&quot; &quot;</span><span style="color:#C98A7D;">cmd.reply</span><span style="color:#C98A7DAA;">&quot;</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">subscribe</span><span style="color:#B56959AA;">&quot; &quot;</span><span style="color:#B56959;">cmd.reply</span><span style="color:#B56959AA;">&quot;</span></span>
<span class="line"><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">publish</span><span style="color:#B56959AA;">&quot; &quot;</span><span style="color:#B56959;">cmd</span><span style="color:#B56959AA;">&quot; &quot;</span><span style="color:#B56959;">{</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">pattern</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:{</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">cmd</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">user.get.master</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">},</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">data</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:{},</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">id</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">:</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">6c1475df-b357-4bc9-8443-5f0f06bf8e0b</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">}</span><span style="color:#B56959AA;">&quot;</span></span>
<span class="line"><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">unsubscribe</span><span style="color:#B56959AA;">&quot; &quot;</span><span style="color:#B56959;">cmd.reply</span><span style="color:#B56959AA;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>可以看到网关层先订阅了一个基于之前我们定义的 <code>user.get.master</code> 的 reply 事件，之后，在 <code>user.get.master</code> 事件上发布了数据，就是将 pattern, data, id 发布了，十分重要的就是这个id，这是网关层中传输来的。</p><p>对比一下，你就可以知道其中有一个特别长的日志就是由微服务发布的，可以发现微服务是向 reply 事件发布了事件，内容还包含了之前我们提到的 id，之后网关层收到了数据返回，接着返回来自微服务的数据，取消订阅对应的事件</p><p>让我们用一个图来解释下吧：</p><div class="language-mermaid"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">graph</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">TD</span><span style="color:#DBD7CAEE;">;</span></span>
<span class="line"><span style="color:#BD976A;">A</span><span style="color:#4D9375;">[</span><span style="color:#C98A7D;">网关层接受请求</span><span style="color:#4D9375;">]</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">--&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">B</span><span style="color:#4D9375;">[</span><span style="color:#C98A7D;">开始订阅 event.reply 事件</span><span style="color:#4D9375;">]</span></span>
<span class="line"><span style="color:#BD976A;">A </span><span style="color:#4D9375;">--&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">C</span><span style="color:#4D9375;">[</span><span style="color:#C98A7D;">向 event 发布 data 和 id</span><span style="color:#4D9375;">]</span></span>
<span class="line"><span style="color:#BD976A;">C </span><span style="color:#4D9375;">--&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">D</span></span>
<span class="line"><span style="color:#BD976A;">B </span><span style="color:#4D9375;">--&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">F</span></span>
<span class="line"><span style="color:#BD976A;">E </span><span style="color:#4D9375;">--&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">F</span><span style="color:#4D9375;">[</span><span style="color:#C98A7D;">网关层收到来自 event.reply 的数据</span><span style="color:#4D9375;">]</span></span>
<span class="line"><span style="color:#BD976A;">F </span><span style="color:#4D9375;">--&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">G</span><span style="color:#4D9375;">[</span><span style="color:#C98A7D;">取消订阅 event.reply 事件</span><span style="color:#4D9375;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD976A;">AA</span><span style="color:#4D9375;">[</span><span style="color:#C98A7D;">微服务开始订阅 event 事件</span><span style="color:#4D9375;">]</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">--&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">D</span><span style="color:#4D9375;">[</span><span style="color:#C98A7D;">微服务收到来自 event 的数据</span><span style="color:#4D9375;">]</span></span>
<span class="line"><span style="color:#BD976A;">D </span><span style="color:#4D9375;">--&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">E</span><span style="color:#4D9375;">[</span><span style="color:#C98A7D;">向 event.reply 发布数据</span><span style="color:#4D9375;">]</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">graph</span><span style="color:#393A34;"> </span><span style="color:#59873A;">TD</span><span style="color:#393A34;">;</span></span>
<span class="line"><span style="color:#B07D48;">A</span><span style="color:#1E754F;">[</span><span style="color:#B56959;">网关层接受请求</span><span style="color:#1E754F;">]</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">--&gt;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">B</span><span style="color:#1E754F;">[</span><span style="color:#B56959;">开始订阅 event.reply 事件</span><span style="color:#1E754F;">]</span></span>
<span class="line"><span style="color:#B07D48;">A </span><span style="color:#1E754F;">--&gt;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">C</span><span style="color:#1E754F;">[</span><span style="color:#B56959;">向 event 发布 data 和 id</span><span style="color:#1E754F;">]</span></span>
<span class="line"><span style="color:#B07D48;">C </span><span style="color:#1E754F;">--&gt;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">D</span></span>
<span class="line"><span style="color:#B07D48;">B </span><span style="color:#1E754F;">--&gt;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">F</span></span>
<span class="line"><span style="color:#B07D48;">E </span><span style="color:#1E754F;">--&gt;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">F</span><span style="color:#1E754F;">[</span><span style="color:#B56959;">网关层收到来自 event.reply 的数据</span><span style="color:#1E754F;">]</span></span>
<span class="line"><span style="color:#B07D48;">F </span><span style="color:#1E754F;">--&gt;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">G</span><span style="color:#1E754F;">[</span><span style="color:#B56959;">取消订阅 event.reply 事件</span><span style="color:#1E754F;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B07D48;">AA</span><span style="color:#1E754F;">[</span><span style="color:#B56959;">微服务开始订阅 event 事件</span><span style="color:#1E754F;">]</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">--&gt;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">D</span><span style="color:#1E754F;">[</span><span style="color:#B56959;">微服务收到来自 event 的数据</span><span style="color:#1E754F;">]</span></span>
<span class="line"><span style="color:#B07D48;">D </span><span style="color:#1E754F;">--&gt;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">E</span><span style="color:#1E754F;">[</span><span style="color:#B56959;">向 event.reply 发布数据</span><span style="color:#1E754F;">]</span></span>
<span class="line"></span></code></pre></div><p>总结一下，其实就是这样的：</p><p><img src="https://cdn.my-api.cn/user/w/asset-pic-picgo/2023-01-202301092137599.png" alt="SCR-20230109-nrl"></p><h2 id="使用-nodejs-写一个微服务" tabindex="-1">使用 NodeJS 写一个微服务 <a class="header-anchor" href="#使用-nodejs-写一个微服务" aria-hidden="true">#</a></h2><p>使用 pnpm 安装上 redis，根据上方我所说的内容，抽出来一些功能函数，以提高可维护性。</p><p>因为 <a href="https://docs.nestjs.com/microservices/basics" target="_blank" rel="noreferrer">NestJS 文档</a> 有说到两种模式，分别是 <code>message</code> 和 <code>event</code>，因此我们需要做一个判定和快捷生成对应的 pattern：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">/**</span></span>
<span class="line"><span style="color:#758575DD;"> * isEmitter 判断是否为 event-based 模式</span></span>
<span class="line"><span style="color:#758575DD;"> * </span></span>
<span class="line"><span style="color:#758575DD;"> * 通过 JSON.stringify 判断是否为 event-based 模式。</span></span>
<span class="line"><span style="color:#758575DD;"> * 原理：在 event-based 模式下, pattern 是不带 cmd 的。</span></span>
<span class="line"><span style="color:#758575DD;"> *</span></span>
<span class="line"><span style="color:#758575DD;"> * PS：\`isEmitter\` 方法可能在这个案例里面没有用，但不排除有其他需求时是有用的</span></span>
<span class="line"><span style="color:#758575DD;"> * </span></span>
<span class="line"><span style="color:#758575DD;"> * </span><span style="color:#666666;">@</span><span style="color:#4D9375;">param</span><span style="color:#758575DD;"> </span><span style="color:#666666;">{</span><span style="color:#5DA9A7;">string</span><span style="color:#666666;">}</span><span style="color:#758575DD;"> </span><span style="color:#BD976A;">pattern</span><span style="color:#758575DD;"> 模式</span></span>
<span class="line"><span style="color:#758575DD;"> * </span><span style="color:#666666;">@</span><span style="color:#4D9375;">returns</span><span style="color:#758575DD;"> boolean</span></span>
<span class="line"><span style="color:#758575DD;"> */</span></span>
<span class="line"><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">isEmitter</span><span style="color:#666666;">(</span><span style="color:#BD976A;">pattern</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">try</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">JSON</span><span style="color:#666666;">.</span><span style="color:#80A665;">stringify</span><span style="color:#666666;">(</span><span style="color:#BD976A;">pattern</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">false</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">catch</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">true</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">/**</span></span>
<span class="line"><span style="color:#758575DD;"> * 快捷生成模式</span></span>
<span class="line"><span style="color:#758575DD;"> * </span><span style="color:#666666;">@</span><span style="color:#4D9375;">param</span><span style="color:#758575DD;"> </span><span style="color:#666666;">{</span><span style="color:#5DA9A7;">string</span><span style="color:#666666;">}</span><span style="color:#758575DD;"> </span><span style="color:#BD976A;">pattern</span><span style="color:#758575DD;"> 活动名称</span></span>
<span class="line"><span style="color:#758575DD;"> * </span><span style="color:#666666;">@</span><span style="color:#4D9375;">param</span><span style="color:#758575DD;"> </span><span style="color:#666666;">{</span><span style="color:#5DA9A7;">boolean</span><span style="color:#666666;">}</span><span style="color:#758575DD;"> </span><span style="color:#BD976A;">isEmit</span><span style="color:#758575DD;"> 是否为 event-based 模式</span></span>
<span class="line"><span style="color:#758575DD;"> * </span><span style="color:#666666;">@</span><span style="color:#4D9375;">returns</span><span style="color:#758575DD;"> string</span></span>
<span class="line"><span style="color:#758575DD;"> */</span></span>
<span class="line"><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">generagtePattern</span><span style="color:#666666;">(</span><span style="color:#BD976A;">pattern</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">isEmit</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#CB7676;">!</span><span style="color:#BD976A;">isEmit</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">JSON</span><span style="color:#666666;">.</span><span style="color:#80A665;">stringify</span><span style="color:#666666;">({ </span><span style="color:#B8A965;">cmd</span><span style="color:#666666;">: </span><span style="color:#BD976A;">pattern</span><span style="color:#666666;"> })</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">pattern</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">/**</span></span>
<span class="line"><span style="color:#A0ADA0;"> * isEmitter 判断是否为 event-based 模式</span></span>
<span class="line"><span style="color:#A0ADA0;"> * </span></span>
<span class="line"><span style="color:#A0ADA0;"> * 通过 JSON.stringify 判断是否为 event-based 模式。</span></span>
<span class="line"><span style="color:#A0ADA0;"> * 原理：在 event-based 模式下, pattern 是不带 cmd 的。</span></span>
<span class="line"><span style="color:#A0ADA0;"> *</span></span>
<span class="line"><span style="color:#A0ADA0;"> * PS：\`isEmitter\` 方法可能在这个案例里面没有用，但不排除有其他需求时是有用的</span></span>
<span class="line"><span style="color:#A0ADA0;"> * </span></span>
<span class="line"><span style="color:#A0ADA0;"> * </span><span style="color:#999999;">@</span><span style="color:#1E754F;">param</span><span style="color:#A0ADA0;"> </span><span style="color:#999999;">{</span><span style="color:#2E808F;">string</span><span style="color:#999999;">}</span><span style="color:#A0ADA0;"> </span><span style="color:#B07D48;">pattern</span><span style="color:#A0ADA0;"> 模式</span></span>
<span class="line"><span style="color:#A0ADA0;"> * </span><span style="color:#999999;">@</span><span style="color:#1E754F;">returns</span><span style="color:#A0ADA0;"> boolean</span></span>
<span class="line"><span style="color:#A0ADA0;"> */</span></span>
<span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">isEmitter</span><span style="color:#999999;">(</span><span style="color:#B07D48;">pattern</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">try</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">JSON</span><span style="color:#999999;">.</span><span style="color:#59873A;">stringify</span><span style="color:#999999;">(</span><span style="color:#B07D48;">pattern</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">false</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">catch</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">true</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">/**</span></span>
<span class="line"><span style="color:#A0ADA0;"> * 快捷生成模式</span></span>
<span class="line"><span style="color:#A0ADA0;"> * </span><span style="color:#999999;">@</span><span style="color:#1E754F;">param</span><span style="color:#A0ADA0;"> </span><span style="color:#999999;">{</span><span style="color:#2E808F;">string</span><span style="color:#999999;">}</span><span style="color:#A0ADA0;"> </span><span style="color:#B07D48;">pattern</span><span style="color:#A0ADA0;"> 活动名称</span></span>
<span class="line"><span style="color:#A0ADA0;"> * </span><span style="color:#999999;">@</span><span style="color:#1E754F;">param</span><span style="color:#A0ADA0;"> </span><span style="color:#999999;">{</span><span style="color:#2E808F;">boolean</span><span style="color:#999999;">}</span><span style="color:#A0ADA0;"> </span><span style="color:#B07D48;">isEmit</span><span style="color:#A0ADA0;"> 是否为 event-based 模式</span></span>
<span class="line"><span style="color:#A0ADA0;"> * </span><span style="color:#999999;">@</span><span style="color:#1E754F;">returns</span><span style="color:#A0ADA0;"> string</span></span>
<span class="line"><span style="color:#A0ADA0;"> */</span></span>
<span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">generagtePattern</span><span style="color:#999999;">(</span><span style="color:#B07D48;">pattern</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">isEmit</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#AB5959;">!</span><span style="color:#B07D48;">isEmit</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">JSON</span><span style="color:#999999;">.</span><span style="color:#59873A;">stringify</span><span style="color:#999999;">({ </span><span style="color:#998418;">cmd</span><span style="color:#999999;">: </span><span style="color:#B07D48;">pattern</span><span style="color:#999999;"> })</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">pattern</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span></code></pre></div><p>我们分析一下信息的结构吧，很明显来自Gateway的信息带有3个key：pattern, data, id，其中 id 是自动生成的，也是返回响应时必要的；</p><p>再分析一下NestJS Microservice 是怎么响应的，它的信息也带有3个key：response, isDispose, id，其中 isDispose 必须为 true，id 必须是来自 Gateway 的。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">/**</span></span>
<span class="line"><span style="color:#758575DD;"> * 解析来自 NestJS Gateway 发布的信息</span></span>
<span class="line"><span style="color:#758575DD;"> * </span><span style="color:#666666;">@</span><span style="color:#4D9375;">param</span><span style="color:#758575DD;"> </span><span style="color:#666666;">{</span><span style="color:#5DA9A7;">string</span><span style="color:#666666;">}</span><span style="color:#758575DD;"> </span><span style="color:#BD976A;">message</span></span>
<span class="line"><span style="color:#758575DD;"> * </span><span style="color:#666666;">@</span><span style="color:#4D9375;">returns</span><span style="color:#758575DD;"> object</span></span>
<span class="line"><span style="color:#758575DD;"> */</span></span>
<span class="line"><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">parseEventDataFromGateway</span><span style="color:#666666;">(</span><span style="color:#BD976A;">message</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">message</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">JSON</span><span style="color:#666666;">.</span><span style="color:#80A665;">parse</span><span style="color:#666666;">(</span><span style="color:#BD976A;">message</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#B8A965;">id</span><span style="color:#666666;">: </span><span style="color:#BD976A;">message</span><span style="color:#666666;">.</span><span style="color:#BD976A;">id</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#B8A965;">data</span><span style="color:#666666;">: </span><span style="color:#BD976A;">message</span><span style="color:#666666;">.</span><span style="color:#BD976A;">data</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#B8A965;">pattern</span><span style="color:#666666;">: </span><span style="color:#BD976A;">JSON</span><span style="color:#666666;">.</span><span style="color:#80A665;">stringify</span><span style="color:#666666;">(</span><span style="color:#BD976A;">message</span><span style="color:#666666;">.</span><span style="color:#BD976A;">pattern</span><span style="color:#666666;">),</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#B8A965;">isEmitter</span><span style="color:#666666;">: </span><span style="color:#80A665;">isEmitter</span><span style="color:#666666;">(</span><span style="color:#BD976A;">message</span><span style="color:#666666;">.</span><span style="color:#BD976A;">pattern</span><span style="color:#666666;">),</span></span>
<span class="line"><span style="color:#666666;">  }</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">/**</span></span>
<span class="line"><span style="color:#758575DD;"> * 生成响应数据</span></span>
<span class="line"><span style="color:#758575DD;"> * </span><span style="color:#666666;">@</span><span style="color:#4D9375;">param</span><span style="color:#758575DD;"> </span><span style="color:#666666;">{</span><span style="color:#5DA9A7;">string</span><span style="color:#666666;">}</span><span style="color:#758575DD;"> </span><span style="color:#BD976A;">id</span><span style="color:#758575DD;"> 事件ID</span></span>
<span class="line"><span style="color:#758575DD;"> * </span><span style="color:#666666;">@</span><span style="color:#4D9375;">param</span><span style="color:#758575DD;"> </span><span style="color:#666666;">{</span><span style="color:#5DA9A7;">string | object</span><span style="color:#666666;">}</span><span style="color:#758575DD;"> </span><span style="color:#BD976A;">data</span><span style="color:#758575DD;"> 事件数据</span></span>
<span class="line"><span style="color:#758575DD;"> * </span><span style="color:#666666;">@</span><span style="color:#4D9375;">returns</span><span style="color:#758575DD;"> string</span></span>
<span class="line"><span style="color:#758575DD;"> */</span></span>
<span class="line"><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">generagteResponse</span><span style="color:#666666;">(</span><span style="color:#BD976A;">id</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">data</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">JSON</span><span style="color:#666666;">.</span><span style="color:#80A665;">stringify</span><span style="color:#666666;">(</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#B8A965;">response</span><span style="color:#666666;">: </span><span style="color:#BD976A;">data</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#B8A965;">isDisposed</span><span style="color:#666666;">: </span><span style="color:#4D9375;">true</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#BD976A;">id</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">    }</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">/**</span></span>
<span class="line"><span style="color:#A0ADA0;"> * 解析来自 NestJS Gateway 发布的信息</span></span>
<span class="line"><span style="color:#A0ADA0;"> * </span><span style="color:#999999;">@</span><span style="color:#1E754F;">param</span><span style="color:#A0ADA0;"> </span><span style="color:#999999;">{</span><span style="color:#2E808F;">string</span><span style="color:#999999;">}</span><span style="color:#A0ADA0;"> </span><span style="color:#B07D48;">message</span></span>
<span class="line"><span style="color:#A0ADA0;"> * </span><span style="color:#999999;">@</span><span style="color:#1E754F;">returns</span><span style="color:#A0ADA0;"> object</span></span>
<span class="line"><span style="color:#A0ADA0;"> */</span></span>
<span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">parseEventDataFromGateway</span><span style="color:#999999;">(</span><span style="color:#B07D48;">message</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">message</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">JSON</span><span style="color:#999999;">.</span><span style="color:#59873A;">parse</span><span style="color:#999999;">(</span><span style="color:#B07D48;">message</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#998418;">id</span><span style="color:#999999;">: </span><span style="color:#B07D48;">message</span><span style="color:#999999;">.</span><span style="color:#B07D48;">id</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#998418;">data</span><span style="color:#999999;">: </span><span style="color:#B07D48;">message</span><span style="color:#999999;">.</span><span style="color:#B07D48;">data</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#998418;">pattern</span><span style="color:#999999;">: </span><span style="color:#B07D48;">JSON</span><span style="color:#999999;">.</span><span style="color:#59873A;">stringify</span><span style="color:#999999;">(</span><span style="color:#B07D48;">message</span><span style="color:#999999;">.</span><span style="color:#B07D48;">pattern</span><span style="color:#999999;">),</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#998418;">isEmitter</span><span style="color:#999999;">: </span><span style="color:#59873A;">isEmitter</span><span style="color:#999999;">(</span><span style="color:#B07D48;">message</span><span style="color:#999999;">.</span><span style="color:#B07D48;">pattern</span><span style="color:#999999;">),</span></span>
<span class="line"><span style="color:#999999;">  }</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">/**</span></span>
<span class="line"><span style="color:#A0ADA0;"> * 生成响应数据</span></span>
<span class="line"><span style="color:#A0ADA0;"> * </span><span style="color:#999999;">@</span><span style="color:#1E754F;">param</span><span style="color:#A0ADA0;"> </span><span style="color:#999999;">{</span><span style="color:#2E808F;">string</span><span style="color:#999999;">}</span><span style="color:#A0ADA0;"> </span><span style="color:#B07D48;">id</span><span style="color:#A0ADA0;"> 事件ID</span></span>
<span class="line"><span style="color:#A0ADA0;"> * </span><span style="color:#999999;">@</span><span style="color:#1E754F;">param</span><span style="color:#A0ADA0;"> </span><span style="color:#999999;">{</span><span style="color:#2E808F;">string | object</span><span style="color:#999999;">}</span><span style="color:#A0ADA0;"> </span><span style="color:#B07D48;">data</span><span style="color:#A0ADA0;"> 事件数据</span></span>
<span class="line"><span style="color:#A0ADA0;"> * </span><span style="color:#999999;">@</span><span style="color:#1E754F;">returns</span><span style="color:#A0ADA0;"> string</span></span>
<span class="line"><span style="color:#A0ADA0;"> */</span></span>
<span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">generagteResponse</span><span style="color:#999999;">(</span><span style="color:#B07D48;">id</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">data</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">JSON</span><span style="color:#999999;">.</span><span style="color:#59873A;">stringify</span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#998418;">response</span><span style="color:#999999;">: </span><span style="color:#B07D48;">data</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#998418;">isDisposed</span><span style="color:#999999;">: </span><span style="color:#1E754F;">true</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#B07D48;">id</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">    }</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span></code></pre></div><p>所以剩下的就是创建 redis client 和发布/订阅事件了，需要注意的是，返回给 Gateway 的信息需要在事件后加上<code>.reply</code>，你在 monitor 上也能看到 Gateway 在发布事件的时候会同时订阅对应的reply事件：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">createClient</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#C98A7D;">redis</span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">client</span><span style="color:#CB7676;"> = </span><span style="color:#80A665;">createClient</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">subscriber</span><span style="color:#CB7676;"> = </span><span style="color:#BD976A;">client</span><span style="color:#666666;">.</span><span style="color:#80A665;">duplicate</span><span style="color:#666666;">();</span></span>
<span class="line"><span style="color:#4D9375;">await</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">subscriber</span><span style="color:#666666;">.</span><span style="color:#80A665;">connect</span><span style="color:#666666;">();</span></span>
<span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">publisher</span><span style="color:#CB7676;"> = </span><span style="color:#BD976A;">client</span><span style="color:#666666;">.</span><span style="color:#80A665;">duplicate</span><span style="color:#666666;">();</span></span>
<span class="line"><span style="color:#4D9375;">await</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">publisher</span><span style="color:#666666;">.</span><span style="color:#80A665;">connect</span><span style="color:#666666;">();</span></span>
<span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">pattern</span><span style="color:#CB7676;"> = </span><span style="color:#80A665;">generagtePattern</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">&lt;YOUR_EVENT_SETTING&gt;</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#4D9375;">false</span><span style="color:#666666;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4D9375;">await</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">subscriber</span><span style="color:#666666;">.</span><span style="color:#80A665;">subscribe</span><span style="color:#666666;">(</span><span style="color:#BD976A;">pattern</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">message</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">const </span><span style="color:#666666;">{</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">id</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">data</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">pattern</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">isEmitter</span><span style="color:#CB7676;"> </span><span style="color:#666666;">}</span><span style="color:#CB7676;"> = </span><span style="color:#80A665;">parseEventDataFromGateway</span><span style="color:#666666;">(</span><span style="color:#BD976A;">message</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">Message: </span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">message</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">Event ID: </span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">id</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">Data: </span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">data</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">Pattern: </span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">pattern</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">isEmitter: </span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">isEmitter</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// ⚠️ 注意下这里，这个的 event 是 pattern.reply！</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">await</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">publisher</span><span style="color:#666666;">.</span><span style="color:#80A665;">publish</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">\`</span><span style="color:#666666;">\${</span><span style="color:#C98A7D;">pattern</span><span style="color:#666666;">}</span><span style="color:#C98A7D;">.reply</span><span style="color:#C98A7DAA;">\`</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">generagteResponse</span><span style="color:#666666;">(</span><span style="color:#BD976A;">id</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{ </span><span style="color:#B8A965;">name</span><span style="color:#666666;">: </span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#C98A7D;">test</span><span style="color:#C98A7DAA;">&#39;</span><span style="color:#666666;"> }))</span></span>
<span class="line"><span style="color:#666666;">});</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">createClient</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">redis</span><span style="color:#B56959AA;">&#39;</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">client</span><span style="color:#AB5959;"> = </span><span style="color:#59873A;">createClient</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">subscriber</span><span style="color:#AB5959;"> = </span><span style="color:#B07D48;">client</span><span style="color:#999999;">.</span><span style="color:#59873A;">duplicate</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#1E754F;">await</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">subscriber</span><span style="color:#999999;">.</span><span style="color:#59873A;">connect</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">publisher</span><span style="color:#AB5959;"> = </span><span style="color:#B07D48;">client</span><span style="color:#999999;">.</span><span style="color:#59873A;">duplicate</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#1E754F;">await</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">publisher</span><span style="color:#999999;">.</span><span style="color:#59873A;">connect</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">pattern</span><span style="color:#AB5959;"> = </span><span style="color:#59873A;">generagtePattern</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">&lt;YOUR_EVENT_SETTING&gt;</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#1E754F;">false</span><span style="color:#999999;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">await</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">subscriber</span><span style="color:#999999;">.</span><span style="color:#59873A;">subscribe</span><span style="color:#999999;">(</span><span style="color:#B07D48;">pattern</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">message</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const </span><span style="color:#999999;">{</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">id</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">data</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">pattern</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">isEmitter</span><span style="color:#AB5959;"> </span><span style="color:#999999;">}</span><span style="color:#AB5959;"> = </span><span style="color:#59873A;">parseEventDataFromGateway</span><span style="color:#999999;">(</span><span style="color:#B07D48;">message</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">Message: </span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">message</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">Event ID: </span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">id</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">Data: </span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">data</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">Pattern: </span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">pattern</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">isEmitter: </span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">isEmitter</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// ⚠️ 注意下这里，这个的 event 是 pattern.reply！</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">await</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">publisher</span><span style="color:#999999;">.</span><span style="color:#59873A;">publish</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">\`</span><span style="color:#999999;">\${</span><span style="color:#B56959;">pattern</span><span style="color:#999999;">}</span><span style="color:#B56959;">.reply</span><span style="color:#B56959AA;">\`</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#59873A;">generagteResponse</span><span style="color:#999999;">(</span><span style="color:#B07D48;">id</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">{ </span><span style="color:#998418;">name</span><span style="color:#999999;">: </span><span style="color:#B56959AA;">&#39;</span><span style="color:#B56959;">test</span><span style="color:#B56959AA;">&#39;</span><span style="color:#999999;"> }))</span></span>
<span class="line"><span style="color:#999999;">});</span></span>
<span class="line"></span></code></pre></div><p>这样便是一个简单易启动的服务啦！使用 node^18 更可以使用其实验性功能：<code>--watch</code> 直接监听文件变化重载程序</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#80A665;">node</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">--watch</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">service.js</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#59873A;">node</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">--watch</span><span style="color:#393A34;"> </span><span style="color:#B56959;">service.js</span></span>
<span class="line"></span></code></pre></div><p><img src="https://cdn.my-api.cn/user/w/asset-pic-picgo/2023-01-202301102241094.jpeg" alt=""></p><h2 id="在-mog-core-中注册事件" tabindex="-1">在 Mog Core 中注册事件 <a class="header-anchor" href="#在-mog-core-中注册事件" aria-hidden="true">#</a></h2><p>在 Mog Core 中，我们需要在 Gateway 运行目录下创建一个 <code>events.yaml</code> 文件，它是用于注册非常规事件的，即非官方实现的事件，例如：<code>user.login</code>，<code>user.register</code> 等等。</p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#B8A965;">render</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;"># controller --&gt; {API}/render/*</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">-</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">path</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">/events</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;"># {API}/render/events</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#B8A965;">method</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">get</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#B8A965;">handler</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">events.get</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;"># 发布活动</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#B8A965;">emit</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">true</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;"># 是否为 event-based 模式</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">-</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">path</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">/events/{id}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;"># {API}/render/events/{id}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#B8A965;">method</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">get</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#B8A965;">handler</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">events.get.id</span></span>
<span class="line"></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#998418;">render</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;"># controller --&gt; {API}/render/*</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">-</span><span style="color:#393A34;"> </span><span style="color:#998418;">path</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B56959;">/events</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;"># {API}/render/events</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#998418;">method</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B56959;">get</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#998418;">handler</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B56959;">events.get</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;"># 发布活动</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#998418;">emit</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">true</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;"># 是否为 event-based 模式</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">-</span><span style="color:#393A34;"> </span><span style="color:#998418;">path</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B56959;">/events/{id}</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;"># {API}/render/events/{id}</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#998418;">method</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B56959;">get</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#998418;">handler</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B56959;">events.get.id</span></span>
<span class="line"></span></code></pre></div><p>如上方例子，当请求 <code>{API}/render/events</code> 时，会触发 <code>events.get</code> 事件，由于 <code>emit</code> 为 true，因此 Gateway 会触发 <code>events.get</code> 事件，而不会开始监听 <code>.reply</code> 事件。</p><p>但是下方的 <code>events.get.id</code> 事件，由于 <code>emit</code> 为 undefined，因此 Gateway 会同时监听 <code>events.get.id</code> 和 <code>events.get.id.reply</code> 事件，如果你的服务没有返回响应，那么 Gateway 会在 5 秒后返回一个超时的响应。</p><h2 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-hidden="true">#</a></h2><p>注意的是：一个事件只能由一个服务受理，否则则会出现冲突情况。别问我问什么，问就是写的时候卡这个问题了。但是一个事件（Event-based）可以调度到多个方法</p><blockquote><p>You can register multiple event handlers for a single event pattern and all of them will be automatically triggered in parallel. -- <a href="https://docs.nestjs.com/microservices/basics" target="_blank" rel="noreferrer">NestJS Documentaion</a></p></blockquote><p>因此，在编码的时候，不要与现有的服务监听的事件冲突，否则会出现不可预知的情况。</p>`,55),e=[o];function t(c,r,y,A,D,i){return n(),a("div",null,e)}const u=s(l,[["render",t]]);export{C as __pageData,u as default};
